<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="5000" height="678" onload="init(evt)" viewBox="0 0 5000 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="661.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="4890" y="24.00">Search</text><text id="matched" x="4890" y="661.00"> </text><svg id="frames" x="10" width="4980" total_samples="9662"><g><title>nix::unistd::read (1 samples, 0.01%)</title><rect x="0.0414%" y="485" width="0.0103%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="1"/><text x="0.1014%" y="495.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="0.0414%" y="469" width="0.0103%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1"/><text x="0.1014%" y="479.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="0.0414%" y="453" width="0.0103%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.1014%" y="463.50"></text></g><g><title>__GI___clone (6 samples, 0.06%)</title><rect x="0.0000%" y="597" width="0.0621%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="6"/><text x="0.0600%" y="607.50"></text></g><g><title>start_thread (6 samples, 0.06%)</title><rect x="0.0000%" y="581" width="0.0621%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="6"/><text x="0.0600%" y="591.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6 samples, 0.06%)</title><rect x="0.0000%" y="565" width="0.0621%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.0600%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.06%)</title><rect x="0.0000%" y="549" width="0.0621%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6"/><text x="0.0600%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.06%)</title><rect x="0.0000%" y="533" width="0.0621%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6"/><text x="0.0600%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.06%)</title><rect x="0.0000%" y="517" width="0.0621%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6"/><text x="0.0600%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.06%)</title><rect x="0.0000%" y="501" width="0.0621%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="6"/><text x="0.0600%" y="511.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.01%)</title><rect x="0.0517%" y="485" width="0.0103%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="1"/><text x="0.1117%" y="495.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (1 samples, 0.01%)</title><rect x="0.0517%" y="469" width="0.0103%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="1"/><text x="0.1117%" y="479.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (1 samples, 0.01%)</title><rect x="0.0517%" y="453" width="0.0103%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="0.1117%" y="463.50"></text></g><g><title>std::thread::park (1 samples, 0.01%)</title><rect x="0.0517%" y="437" width="0.0103%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="0.1117%" y="447.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (1 samples, 0.01%)</title><rect x="0.0517%" y="421" width="0.0103%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.1117%" y="431.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.01%)</title><rect x="0.0517%" y="405" width="0.0103%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.1117%" y="415.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="0.0517%" y="389" width="0.0103%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="0.1117%" y="399.50"></text></g><g><title>amdgpu_bo_free (2 samples, 0.02%)</title><rect x="0.0621%" y="85" width="0.0207%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="2"/><text x="0.1221%" y="95.50"></text></g><g><title>drmCloseBufferHandle (2 samples, 0.02%)</title><rect x="0.0621%" y="69" width="0.0207%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="2"/><text x="0.1221%" y="79.50"></text></g><g><title>drmIoctl (2 samples, 0.02%)</title><rect x="0.0621%" y="53" width="0.0207%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="2"/><text x="0.1221%" y="63.50"></text></g><g><title>__ioctl (2 samples, 0.02%)</title><rect x="0.0621%" y="37" width="0.0207%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="2"/><text x="0.1221%" y="47.50"></text></g><g><title>__libc_start_main (4 samples, 0.04%)</title><rect x="0.0621%" y="597" width="0.0414%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="4"/><text x="0.1221%" y="607.50"></text></g><g><title>main (4 samples, 0.04%)</title><rect x="0.0621%" y="581" width="0.0414%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="4"/><text x="0.1221%" y="591.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.04%)</title><rect x="0.0621%" y="565" width="0.0414%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="4"/><text x="0.1221%" y="575.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.04%)</title><rect x="0.0621%" y="549" width="0.0414%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="4"/><text x="0.1221%" y="559.50"></text></g><g><title>std::panicking::try (4 samples, 0.04%)</title><rect x="0.0621%" y="533" width="0.0414%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="4"/><text x="0.1221%" y="543.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.04%)</title><rect x="0.0621%" y="517" width="0.0414%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="4"/><text x="0.1221%" y="527.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (4 samples, 0.04%)</title><rect x="0.0621%" y="501" width="0.0414%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="4"/><text x="0.1221%" y="511.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.04%)</title><rect x="0.0621%" y="485" width="0.0414%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="4"/><text x="0.1221%" y="495.50"></text></g><g><title>std::panicking::try (4 samples, 0.04%)</title><rect x="0.0621%" y="469" width="0.0414%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="4"/><text x="0.1221%" y="479.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.04%)</title><rect x="0.0621%" y="453" width="0.0414%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="4"/><text x="0.1221%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.04%)</title><rect x="0.0621%" y="437" width="0.0414%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="4"/><text x="0.1221%" y="447.50"></text></g><g><title>std::rt::lang_start::{{closure}} (4 samples, 0.04%)</title><rect x="0.0621%" y="421" width="0.0414%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="4"/><text x="0.1221%" y="431.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.04%)</title><rect x="0.0621%" y="405" width="0.0414%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="4"/><text x="0.1221%" y="415.50"></text></g><g><title>foxterm::main (4 samples, 0.04%)</title><rect x="0.0621%" y="389" width="0.0414%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="4"/><text x="0.1221%" y="399.50"></text></g><g><title>foxterm::renderer::Renderer::init (4 samples, 0.04%)</title><rect x="0.0621%" y="373" width="0.0414%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="4"/><text x="0.1221%" y="383.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (4 samples, 0.04%)</title><rect x="0.0621%" y="357" width="0.0414%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="4"/><text x="0.1221%" y="367.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (4 samples, 0.04%)</title><rect x="0.0621%" y="341" width="0.0414%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="4"/><text x="0.1221%" y="351.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run (4 samples, 0.04%)</title><rect x="0.0621%" y="325" width="0.0414%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="4"/><text x="0.1221%" y="335.50"></text></g><g><title>foxterm::renderer::Renderer::init::{{closure}} (4 samples, 0.04%)</title><rect x="0.0621%" y="309" width="0.0414%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="4"/><text x="0.1221%" y="319.50"></text></g><g><title>&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::cleanup_finished (4 samples, 0.04%)</title><rect x="0.0621%" y="293" width="0.0414%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="4"/><text x="0.1221%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::swapchain::swapchain::PresentFuture&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;,winit::window::Window&gt;&gt; (4 samples, 0.04%)</title><rect x="0.0621%" y="277" width="0.0414%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="4"/><text x="0.1221%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;&gt; (4 samples, 0.04%)</title><rect x="0.0621%" y="261" width="0.0414%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="4"/><text x="0.1221%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt; (4 samples, 0.04%)</title><rect x="0.0621%" y="245" width="0.0414%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="4"/><text x="0.1221%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="0.0621%" y="229" width="0.0414%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="4"/><text x="0.1221%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::synced::builder::commands::SyncCommandBufferBuilderBindDescriptorSets::submit::Cmd&gt; (4 samples, 0.04%)</title><rect x="0.0621%" y="213" width="0.0414%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="4"/><text x="0.1221%" y="223.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="0.0621%" y="197" width="0.0414%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="4"/><text x="0.1221%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.04%)</title><rect x="0.0621%" y="181" width="0.0414%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="4"/><text x="0.1221%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::descriptor_set::persistent::PersistentDescriptorSet&gt; (4 samples, 0.04%)</title><rect x="0.0621%" y="165" width="0.0414%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="4"/><text x="0.1221%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.04%)</title><rect x="0.0621%" y="149" width="0.0414%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="4"/><text x="0.1221%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;vulkano::descriptor_set::pool::standard::Pool&gt;&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="0.0621%" y="133" width="0.0414%" height="15" fill="rgb(225,35,8)" fg:x="6" fg:w="4"/><text x="0.1221%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.04%)</title><rect x="0.0621%" y="117" width="0.0414%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="4"/><text x="0.1221%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vulkano::descriptor_set::pool::standard::Pool&gt;&gt; (4 samples, 0.04%)</title><rect x="0.0621%" y="101" width="0.0414%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="4"/><text x="0.1221%" y="111.50"></text></g><g><title>amdgpu_bo_va_op_raw (2 samples, 0.02%)</title><rect x="0.0828%" y="85" width="0.0207%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="2"/><text x="0.1428%" y="95.50"></text></g><g><title>drmCommandWriteRead (2 samples, 0.02%)</title><rect x="0.0828%" y="69" width="0.0207%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="2"/><text x="0.1428%" y="79.50"></text></g><g><title>drmIoctl (2 samples, 0.02%)</title><rect x="0.0828%" y="53" width="0.0207%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="2"/><text x="0.1428%" y="63.50"></text></g><g><title>__ioctl (2 samples, 0.02%)</title><rect x="0.0828%" y="37" width="0.0207%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="2"/><text x="0.1428%" y="47.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (1 samples, 0.01%)</title><rect x="0.1035%" y="293" width="0.0103%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="0.1635%" y="303.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::pre_run (1 samples, 0.01%)</title><rect x="0.1035%" y="277" width="0.0103%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="0.1635%" y="287.50"></text></g><g><title>&lt;smithay_client_toolkit::event_loop::WaylandSource as calloop::sources::EventSource&gt;::pre_run (1 samples, 0.01%)</title><rect x="0.1035%" y="261" width="0.0103%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="0.1635%" y="271.50"></text></g><g><title>wayland_client::display::Display::flush (1 samples, 0.01%)</title><rect x="0.1035%" y="245" width="0.0103%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="0.1635%" y="255.50"></text></g><g><title>wl_display_flush (1 samples, 0.01%)</title><rect x="0.1035%" y="229" width="0.0103%" height="15" fill="rgb(221,10,30)" fg:x="10" fg:w="1"/><text x="0.1635%" y="239.50"></text></g><g><title>__libc_sendmsg (1 samples, 0.01%)</title><rect x="0.1035%" y="213" width="0.0103%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="0.1635%" y="223.50"></text></g><g><title>__libc_sendmsg (1 samples, 0.01%)</title><rect x="0.1035%" y="197" width="0.0103%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="0.1635%" y="207.50"></text></g><g><title>&lt;T as vulkano::buffer::traits::BufferAccess&gt;::conflict_key (6 samples, 0.06%)</title><rect x="1.8526%" y="277" width="0.0621%" height="15" fill="rgb(234,67,33)" fg:x="179" fg:w="6"/><text x="1.9126%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.9147%" y="277" width="0.0103%" height="15" fill="rgb(247,98,35)" fg:x="185" fg:w="1"/><text x="1.9747%" y="287.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.2252%" y="261" width="0.0103%" height="15" fill="rgb(247,138,52)" fg:x="215" fg:w="1"/><text x="2.2852%" y="271.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (32 samples, 0.33%)</title><rect x="1.9251%" y="277" width="0.3312%" height="15" fill="rgb(213,79,30)" fg:x="186" fg:w="32"/><text x="1.9851%" y="287.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (2 samples, 0.02%)</title><rect x="2.2356%" y="261" width="0.0207%" height="15" fill="rgb(246,177,23)" fg:x="216" fg:w="2"/><text x="2.2956%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.18%)</title><rect x="2.6599%" y="229" width="0.1759%" height="15" fill="rgb(230,62,27)" fg:x="257" fg:w="17"/><text x="2.7199%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="2.7738%" y="213" width="0.0621%" height="15" fill="rgb(216,154,8)" fg:x="268" fg:w="6"/><text x="2.8338%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (71 samples, 0.73%)</title><rect x="2.2563%" y="277" width="0.7348%" height="15" fill="rgb(244,35,45)" fg:x="218" fg:w="71"/><text x="2.3163%" y="287.50">&lt;st..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.73%)</title><rect x="2.2563%" y="261" width="0.7348%" height="15" fill="rgb(251,115,12)" fg:x="218" fg:w="71"/><text x="2.3163%" y="271.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (44 samples, 0.46%)</title><rect x="2.5357%" y="245" width="0.4554%" height="15" fill="rgb(240,54,50)" fg:x="245" fg:w="44"/><text x="2.5957%" y="255.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (15 samples, 0.16%)</title><rect x="2.8359%" y="229" width="0.1552%" height="15" fill="rgb(233,84,52)" fg:x="274" fg:w="15"/><text x="2.8959%" y="239.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="3.0118%" y="261" width="0.0103%" height="15" fill="rgb(207,117,47)" fg:x="291" fg:w="1"/><text x="3.0718%" y="271.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="3.0118%" y="245" width="0.0103%" height="15" fill="rgb(249,43,39)" fg:x="291" fg:w="1"/><text x="3.0718%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="3.0118%" y="229" width="0.0103%" height="15" fill="rgb(209,38,44)" fg:x="291" fg:w="1"/><text x="3.0718%" y="239.50"></text></g><g><title>&lt;vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::begin_render_pass::Cmd as vulkano::command_buffer::synced::Command&gt;::send (4 samples, 0.04%)</title><rect x="2.9911%" y="277" width="0.0414%" height="15" fill="rgb(236,212,23)" fg:x="289" fg:w="4"/><text x="3.0511%" y="287.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="3.0221%" y="261" width="0.0103%" height="15" fill="rgb(242,79,21)" fg:x="292" fg:w="1"/><text x="3.0821%" y="271.50"></text></g><g><title>&lt;vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::bind_index_buffer::Cmd as vulkano::command_buffer::synced::Command&gt;::send (3 samples, 0.03%)</title><rect x="3.0325%" y="277" width="0.0310%" height="15" fill="rgb(211,96,35)" fg:x="293" fg:w="3"/><text x="3.0925%" y="287.50"></text></g><g><title>&lt;vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::bind_pipeline_graphics::Cmd as vulkano::command_buffer::synced::Command&gt;::send (5 samples, 0.05%)</title><rect x="3.0635%" y="277" width="0.0517%" height="15" fill="rgb(253,215,40)" fg:x="296" fg:w="5"/><text x="3.1235%" y="287.50"></text></g><g><title>&lt;vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::draw_indexed::Cmd as vulkano::command_buffer::synced::Command&gt;::send (78 samples, 0.81%)</title><rect x="3.1153%" y="277" width="0.8073%" height="15" fill="rgb(211,81,21)" fg:x="301" fg:w="78"/><text x="3.1753%" y="287.50">&lt;vu..</text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_draw_indexed (1 samples, 0.01%)</title><rect x="3.9122%" y="261" width="0.0103%" height="15" fill="rgb(208,190,38)" fg:x="378" fg:w="1"/><text x="3.9722%" y="271.50"></text></g><g><title>&lt;vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::end_render_pass::Cmd as vulkano::command_buffer::synced::Command&gt;::send (1 samples, 0.01%)</title><rect x="3.9226%" y="277" width="0.0103%" height="15" fill="rgb(235,213,38)" fg:x="379" fg:w="1"/><text x="3.9826%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="3.9226%" y="261" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="379" fg:w="1"/><text x="3.9826%" y="271.50"></text></g><g><title>&lt;vulkano::descriptor_set::persistent::PersistentDescriptorSet&lt;P&gt; as vulkano::descriptor_set::DescriptorSet&gt;::inner (2 samples, 0.02%)</title><rect x="4.0882%" y="245" width="0.0207%" height="15" fill="rgb(244,218,35)" fg:x="395" fg:w="2"/><text x="4.1482%" y="255.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (6 samples, 0.06%)</title><rect x="4.0571%" y="261" width="0.0621%" height="15" fill="rgb(240,68,47)" fg:x="392" fg:w="6"/><text x="4.1171%" y="271.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.01%)</title><rect x="4.1089%" y="245" width="0.0103%" height="15" fill="rgb(210,16,53)" fg:x="397" fg:w="1"/><text x="4.1689%" y="255.50"></text></g><g><title>&lt;vulkano::command_buffer::synced::builder::commands::SyncCommandBufferBuilderBindDescriptorSets::submit::Cmd as vulkano::command_buffer::synced::Command&gt;::send (40 samples, 0.41%)</title><rect x="3.9329%" y="277" width="0.4140%" height="15" fill="rgb(235,124,12)" fg:x="380" fg:w="40"/><text x="3.9929%" y="287.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (22 samples, 0.23%)</title><rect x="4.1192%" y="261" width="0.2277%" height="15" fill="rgb(224,169,11)" fg:x="398" fg:w="22"/><text x="4.1792%" y="271.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="5.7028%" y="261" width="0.0103%" height="15" fill="rgb(250,166,2)" fg:x="551" fg:w="1"/><text x="5.7628%" y="271.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.04%)</title><rect x="5.7131%" y="261" width="0.0414%" height="15" fill="rgb(242,216,29)" fg:x="552" fg:w="4"/><text x="5.7731%" y="271.50"></text></g><g><title>&lt;vulkano::command_buffer::synced::builder::commands::SyncCommandBufferBuilderBindVertexBuffer::submit::Cmd as vulkano::command_buffer::synced::Command&gt;::send (140 samples, 1.45%)</title><rect x="4.3469%" y="277" width="1.4490%" height="15" fill="rgb(230,116,27)" fg:x="420" fg:w="140"/><text x="4.4069%" y="287.50">&lt;vulkano..</text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 0.04%)</title><rect x="5.7545%" y="261" width="0.0414%" height="15" fill="rgb(228,99,48)" fg:x="556" fg:w="4"/><text x="5.8145%" y="271.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="5.8890%" y="181" width="0.0103%" height="15" fill="rgb(253,11,6)" fg:x="569" fg:w="1"/><text x="5.9490%" y="191.50"></text></g><g><title>__GI___libc_free (22 samples, 0.23%)</title><rect x="5.8994%" y="181" width="0.2277%" height="15" fill="rgb(247,143,39)" fg:x="570" fg:w="22"/><text x="5.9594%" y="191.50"></text></g><g><title>_int_free (42 samples, 0.43%)</title><rect x="6.1271%" y="181" width="0.4347%" height="15" fill="rgb(236,97,10)" fg:x="592" fg:w="42"/><text x="6.1871%" y="191.50">_..</text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="6.5514%" y="165" width="0.0103%" height="15" fill="rgb(233,208,19)" fg:x="633" fg:w="1"/><text x="6.6114%" y="175.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="6.5514%" y="149" width="0.0103%" height="15" fill="rgb(216,164,2)" fg:x="633" fg:w="1"/><text x="6.6114%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::PoisonError&lt;std::sync::mutex::MutexGuard&lt;ash::vk::definitions::Queue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="6.5618%" y="181" width="0.0103%" height="15" fill="rgb(220,129,5)" fg:x="634" fg:w="1"/><text x="6.6218%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::bind_index_buffer::Cmd&gt; (2 samples, 0.02%)</title><rect x="6.5721%" y="181" width="0.0207%" height="15" fill="rgb(242,17,10)" fg:x="635" fg:w="2"/><text x="6.6321%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::bind_pipeline_graphics::Cmd&gt; (4 samples, 0.04%)</title><rect x="6.5928%" y="181" width="0.0414%" height="15" fill="rgb(242,107,0)" fg:x="637" fg:w="4"/><text x="6.6528%" y="191.50"></text></g><g><title>_int_free (6 samples, 0.06%)</title><rect x="6.9033%" y="149" width="0.0621%" height="15" fill="rgb(251,28,31)" fg:x="667" fg:w="6"/><text x="6.9633%" y="159.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="6.9551%" y="133" width="0.0103%" height="15" fill="rgb(233,223,10)" fg:x="672" fg:w="1"/><text x="7.0151%" y="143.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.27%)</title><rect x="6.9758%" y="133" width="0.2691%" height="15" fill="rgb(215,21,27)" fg:x="674" fg:w="26"/><text x="7.0358%" y="143.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.08%)</title><rect x="7.1621%" y="117" width="0.0828%" height="15" fill="rgb(232,23,21)" fg:x="692" fg:w="8"/><text x="7.2221%" y="127.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="7.2449%" y="133" width="0.0207%" height="15" fill="rgb(244,5,23)" fg:x="700" fg:w="2"/><text x="7.3049%" y="143.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="7.2552%" y="117" width="0.0103%" height="15" fill="rgb(226,81,46)" fg:x="701" fg:w="1"/><text x="7.3152%" y="127.50"></text></g><g><title>__GI___pthread_mutex_lock (3 samples, 0.03%)</title><rect x="7.4829%" y="101" width="0.0310%" height="15" fill="rgb(247,70,30)" fg:x="723" fg:w="3"/><text x="7.5429%" y="111.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="7.5140%" y="101" width="0.0103%" height="15" fill="rgb(212,68,19)" fg:x="726" fg:w="1"/><text x="7.5740%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.12%)</title><rect x="7.5243%" y="101" width="0.1242%" height="15" fill="rgb(240,187,13)" fg:x="727" fg:w="12"/><text x="7.5843%" y="111.50"></text></g><g><title>&lt;vulkano::descriptor_set::layout::DescriptorType as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="7.6175%" y="85" width="0.0310%" height="15" fill="rgb(223,113,26)" fg:x="736" fg:w="3"/><text x="7.6775%" y="95.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="7.7417%" y="85" width="0.0207%" height="15" fill="rgb(206,192,2)" fg:x="748" fg:w="2"/><text x="7.8017%" y="95.50"></text></g><g><title>_int_free (12 samples, 0.12%)</title><rect x="7.7624%" y="85" width="0.1242%" height="15" fill="rgb(241,108,4)" fg:x="750" fg:w="12"/><text x="7.8224%" y="95.50"></text></g><g><title>&lt;vulkano::descriptor_set::pool::standard::StdDescriptorPoolAlloc as core::ops::drop::Drop&gt;::drop (57 samples, 0.59%)</title><rect x="7.3070%" y="117" width="0.5899%" height="15" fill="rgb(247,173,49)" fg:x="706" fg:w="57"/><text x="7.3670%" y="127.50">&lt;v..</text></g><g><title>vulkano::descriptor_set::pool::sys::UnsafeDescriptorPool::free_descriptor_sets (24 samples, 0.25%)</title><rect x="7.6485%" y="101" width="0.2484%" height="15" fill="rgb(224,114,35)" fg:x="739" fg:w="24"/><text x="7.7085%" y="111.50"></text></g><g><title>vulkano::check_errors (1 samples, 0.01%)</title><rect x="7.8866%" y="85" width="0.0103%" height="15" fill="rgb(245,159,27)" fg:x="762" fg:w="1"/><text x="7.9466%" y="95.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="7.8969%" y="117" width="0.0103%" height="15" fill="rgb(245,172,44)" fg:x="763" fg:w="1"/><text x="7.9569%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::synced::builder::commands::SyncCommandBufferBuilderBindDescriptorSets::submit::Cmd&gt; (126 samples, 1.30%)</title><rect x="6.6342%" y="181" width="1.3041%" height="15" fill="rgb(236,23,11)" fg:x="641" fg:w="126"/><text x="6.6942%" y="191.50">core::p..</text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 1.18%)</title><rect x="6.7584%" y="165" width="1.1799%" height="15" fill="rgb(205,117,38)" fg:x="653" fg:w="114"/><text x="6.8184%" y="175.50">&lt;small..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (94 samples, 0.97%)</title><rect x="6.9654%" y="149" width="0.9729%" height="15" fill="rgb(237,72,25)" fg:x="673" fg:w="94"/><text x="7.0254%" y="159.50">allo..</text></g><g><title>core::ptr::drop_in_place&lt;vulkano::descriptor_set::persistent::PersistentDescriptorSet&gt; (65 samples, 0.67%)</title><rect x="7.2656%" y="133" width="0.6727%" height="15" fill="rgb(244,70,9)" fg:x="702" fg:w="65"/><text x="7.3256%" y="143.50">co..</text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="7.9073%" y="117" width="0.0310%" height="15" fill="rgb(217,125,39)" fg:x="764" fg:w="3"/><text x="7.9673%" y="127.50"></text></g><g><title>&lt;std::sys_common::mutex::MovableMutex as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="7.9694%" y="165" width="0.0414%" height="15" fill="rgb(235,36,10)" fg:x="770" fg:w="4"/><text x="8.0294%" y="175.50"></text></g><g><title>__GI___pthread_mutex_destroy (6 samples, 0.06%)</title><rect x="8.0108%" y="165" width="0.0621%" height="15" fill="rgb(251,123,47)" fg:x="774" fg:w="6"/><text x="8.0708%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 2.23%)</title><rect x="5.8787%" y="197" width="2.2252%" height="15" fill="rgb(221,13,13)" fg:x="568" fg:w="215"/><text x="5.9387%" y="207.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::synced::builder::commands::SyncCommandBufferBuilderBindVertexBuffer::submit::Cmd&gt; (16 samples, 0.17%)</title><rect x="7.9383%" y="181" width="0.1656%" height="15" fill="rgb(238,131,9)" fg:x="767" fg:w="16"/><text x="7.9983%" y="191.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="8.0729%" y="165" width="0.0310%" height="15" fill="rgb(211,50,8)" fg:x="780" fg:w="3"/><text x="8.1329%" y="175.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="8.3523%" y="165" width="0.0310%" height="15" fill="rgb(245,182,24)" fg:x="807" fg:w="3"/><text x="8.4123%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.36%)</title><rect x="8.1350%" y="181" width="0.3622%" height="15" fill="rgb(242,14,37)" fg:x="786" fg:w="35"/><text x="8.1950%" y="191.50"></text></g><g><title>_int_free (11 samples, 0.11%)</title><rect x="8.3834%" y="165" width="0.1138%" height="15" fill="rgb(246,228,12)" fg:x="810" fg:w="11"/><text x="8.4434%" y="175.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="8.4972%" y="181" width="0.0103%" height="15" fill="rgb(213,55,15)" fg:x="821" fg:w="1"/><text x="8.5572%" y="191.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="8.5076%" y="181" width="0.0103%" height="15" fill="rgb(209,9,3)" fg:x="822" fg:w="1"/><text x="8.5676%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.43%)</title><rect x="8.1039%" y="197" width="0.4347%" height="15" fill="rgb(230,59,30)" fg:x="783" fg:w="42"/><text x="8.1639%" y="207.50">&lt;..</text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="8.5179%" y="181" width="0.0207%" height="15" fill="rgb(209,121,21)" fg:x="823" fg:w="2"/><text x="8.5779%" y="191.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="9.0664%" y="165" width="0.0103%" height="15" fill="rgb(220,109,13)" fg:x="876" fg:w="1"/><text x="9.1264%" y="175.50"></text></g><g><title>_int_free (92 samples, 0.95%)</title><rect x="8.5386%" y="197" width="0.9522%" height="15" fill="rgb(232,18,1)" fg:x="825" fg:w="92"/><text x="8.5986%" y="207.50">_int..</text></g><g><title>malloc_consolidate (82 samples, 0.85%)</title><rect x="8.6421%" y="181" width="0.8487%" height="15" fill="rgb(215,41,42)" fg:x="835" fg:w="82"/><text x="8.7021%" y="191.50">mal..</text></g><g><title>unlink_chunk (40 samples, 0.41%)</title><rect x="9.0768%" y="165" width="0.4140%" height="15" fill="rgb(224,123,36)" fg:x="877" fg:w="40"/><text x="9.1368%" y="175.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="9.4908%" y="181" width="0.0310%" height="15" fill="rgb(240,125,3)" fg:x="917" fg:w="3"/><text x="9.5508%" y="191.50"></text></g><g><title>_int_free (5 samples, 0.05%)</title><rect x="9.5218%" y="181" width="0.0517%" height="15" fill="rgb(205,98,50)" fg:x="920" fg:w="5"/><text x="9.5818%" y="191.50"></text></g><g><title>Unknown (2 samples, 0.02%)</title><rect x="9.6978%" y="149" width="0.0207%" height="15" fill="rgb(205,185,37)" fg:x="937" fg:w="2"/><text x="9.7578%" y="159.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.04%)</title><rect x="9.7185%" y="149" width="0.0414%" height="15" fill="rgb(238,207,15)" fg:x="939" fg:w="4"/><text x="9.7785%" y="159.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,099 samples, 11.37%)</title><rect x="9.7599%" y="149" width="11.3745%" height="15" fill="rgb(213,199,42)" fg:x="943" fg:w="1099"/><text x="9.8199%" y="159.50">__memcpy_avx_unaligned_erms</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,118 samples, 11.57%)</title><rect x="9.5736%" y="181" width="11.5711%" height="15" fill="rgb(235,201,11)" fg:x="925" fg:w="1118"/><text x="9.6336%" y="191.50">alloc::sync::Arc&lt;T&gt;::drop_slow</text></g><g><title>&lt;vulkano::buffer::cpu_pool::CpuBufferPoolChunk&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,110 samples, 11.49%)</title><rect x="9.6564%" y="165" width="11.4883%" height="15" fill="rgb(207,46,11)" fg:x="933" fg:w="1110"/><text x="9.7164%" y="175.50">&lt;vulkano::buffer::cpu_pool::CpuBufferPoolChunk&lt;T,A&gt; as core::ops::drop::Drop&gt;::..</text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="21.1343%" y="149" width="0.0103%" height="15" fill="rgb(241,35,35)" fg:x="2042" fg:w="1"/><text x="21.1943%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;vulkano::buffer::cpu_pool::CpuBufferPoolSubbuffer&lt;foxterm::shaders::fragment::ty::Data,alloc::sync::Arc&lt;vulkano::memory::pool::pool::StdMemoryPool&gt;&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="21.1447%" y="181" width="0.0310%" height="15" fill="rgb(243,32,47)" fg:x="2043" fg:w="3"/><text x="21.2047%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::swapchain::swapchain::PresentFuture&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;,winit::window::Window&gt;&gt; (1,491 samples, 15.43%)</title><rect x="5.7959%" y="245" width="15.4316%" height="15" fill="rgb(247,202,23)" fg:x="560" fg:w="1491"/><text x="5.8559%" y="255.50">core::ptr::drop_in_place&lt;vulkano::swapchain::swapchain::PresentFuture&lt;vulkano::command_buffer::traits::Com..</text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;&gt; (1,491 samples, 15.43%)</title><rect x="5.7959%" y="229" width="15.4316%" height="15" fill="rgb(219,102,11)" fg:x="560" fg:w="1491"/><text x="5.8559%" y="239.50">core::ptr::drop_in_place&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::j..</text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt; (1,491 samples, 15.43%)</title><rect x="5.7959%" y="213" width="15.4316%" height="15" fill="rgb(243,110,44)" fg:x="560" fg:w="1491"/><text x="5.8559%" y="223.50">core::ptr::drop_in_place&lt;vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,134 samples, 11.74%)</title><rect x="9.4908%" y="197" width="11.7367%" height="15" fill="rgb(222,74,54)" fg:x="917" fg:w="1134"/><text x="9.5508%" y="207.50">alloc::sync::Arc&lt;T&gt;::drop_slow</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;vulkano::buffer::cpu_pool::CpuBufferPoolSubbuffer&lt;foxterm::shaders::vertex::ty::Data,alloc::sync::Arc&lt;vulkano::memory::pool::pool::StdMemoryPool&gt;&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="21.1757%" y="181" width="0.0517%" height="15" fill="rgb(216,99,12)" fg:x="2046" fg:w="5"/><text x="21.2357%" y="191.50"></text></g><g><title>&lt;T as vulkano::buffer::traits::BufferAccess&gt;::unlock (631 samples, 6.53%)</title><rect x="21.9727%" y="229" width="6.5307%" height="15" fill="rgb(226,22,26)" fg:x="2123" fg:w="631"/><text x="22.0327%" y="239.50">&lt;T as vulkano::buffer::traits::BufferAccess&gt;..</text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.04%)</title><rect x="28.4620%" y="213" width="0.0414%" height="15" fill="rgb(217,163,10)" fg:x="2750" fg:w="4"/><text x="28.5220%" y="223.50"></text></g><g><title>vulkano::command_buffer::synced::SyncCommandBuffer::unlock (704 samples, 7.29%)</title><rect x="21.2275%" y="245" width="7.2863%" height="15" fill="rgb(213,25,53)" fg:x="2051" fg:w="704"/><text x="21.2875%" y="255.50">vulkano::command_buffer::synced::SyncCommandBuffe..</text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="28.5034%" y="229" width="0.0103%" height="15" fill="rgb(252,105,26)" fg:x="2754" fg:w="1"/><text x="28.5634%" y="239.50"></text></g><g><title>&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::cleanup_finished (2,196 samples, 22.73%)</title><rect x="5.7959%" y="261" width="22.7282%" height="15" fill="rgb(220,39,43)" fg:x="560" fg:w="2196"/><text x="5.8559%" y="271.50">&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::cleanup_finished</text></g><g><title>vulkano::sync::fence::Fence::wait (1 samples, 0.01%)</title><rect x="28.5138%" y="245" width="0.0103%" height="15" fill="rgb(229,68,48)" fg:x="2755" fg:w="1"/><text x="28.5738%" y="255.50"></text></g><g><title>drmSyncobjWait (1 samples, 0.01%)</title><rect x="28.5138%" y="229" width="0.0103%" height="15" fill="rgb(252,8,32)" fg:x="2755" fg:w="1"/><text x="28.5738%" y="239.50"></text></g><g><title>drmIoctl (1 samples, 0.01%)</title><rect x="28.5138%" y="213" width="0.0103%" height="15" fill="rgb(223,20,43)" fg:x="2755" fg:w="1"/><text x="28.5738%" y="223.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="28.5138%" y="197" width="0.0103%" height="15" fill="rgb(229,81,49)" fg:x="2755" fg:w="1"/><text x="28.5738%" y="207.50"></text></g><g><title>_int_free (5 samples, 0.05%)</title><rect x="28.5241%" y="197" width="0.0517%" height="15" fill="rgb(236,28,36)" fg:x="2756" fg:w="5"/><text x="28.5841%" y="207.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="28.5655%" y="181" width="0.0103%" height="15" fill="rgb(249,185,26)" fg:x="2760" fg:w="1"/><text x="28.6255%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="28.5759%" y="149" width="0.0103%" height="15" fill="rgb(249,174,33)" fg:x="2761" fg:w="1"/><text x="28.6359%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="28.6276%" y="117" width="0.0103%" height="15" fill="rgb(233,201,37)" fg:x="2766" fg:w="1"/><text x="28.6876%" y="127.50"></text></g><g><title>&lt;vulkano::descriptor_set::pool::standard::StdDescriptorPoolAlloc as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="28.5966%" y="133" width="0.0621%" height="15" fill="rgb(221,78,26)" fg:x="2763" fg:w="6"/><text x="28.6566%" y="143.50"></text></g><g><title>vulkano::descriptor_set::pool::sys::UnsafeDescriptorPool::free_descriptor_sets (2 samples, 0.02%)</title><rect x="28.6380%" y="117" width="0.0207%" height="15" fill="rgb(250,127,30)" fg:x="2767" fg:w="2"/><text x="28.6980%" y="127.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="28.6483%" y="101" width="0.0103%" height="15" fill="rgb(230,49,44)" fg:x="2768" fg:w="1"/><text x="28.7083%" y="111.50"></text></g><g><title>amdgpu_bo_free (1 samples, 0.01%)</title><rect x="28.6690%" y="69" width="0.0103%" height="15" fill="rgb(229,67,23)" fg:x="2770" fg:w="1"/><text x="28.7290%" y="79.50"></text></g><g><title>amdgpu_bo_cpu_unmap (1 samples, 0.01%)</title><rect x="28.6690%" y="53" width="0.0103%" height="15" fill="rgb(249,83,47)" fg:x="2770" fg:w="1"/><text x="28.7290%" y="63.50"></text></g><g><title>munmap (1 samples, 0.01%)</title><rect x="28.6690%" y="37" width="0.0103%" height="15" fill="rgb(215,43,3)" fg:x="2770" fg:w="1"/><text x="28.7290%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.17%)</title><rect x="28.5241%" y="213" width="0.1656%" height="15" fill="rgb(238,154,13)" fg:x="2756" fg:w="16"/><text x="28.5841%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::synced::builder::commands::SyncCommandBufferBuilderBindDescriptorSets::submit::Cmd&gt; (11 samples, 0.11%)</title><rect x="28.5759%" y="197" width="0.1138%" height="15" fill="rgb(219,56,2)" fg:x="2761" fg:w="11"/><text x="28.6359%" y="207.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.11%)</title><rect x="28.5759%" y="181" width="0.1138%" height="15" fill="rgb(233,0,4)" fg:x="2761" fg:w="11"/><text x="28.6359%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.11%)</title><rect x="28.5759%" y="165" width="0.1138%" height="15" fill="rgb(235,30,7)" fg:x="2761" fg:w="11"/><text x="28.6359%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::descriptor_set::persistent::PersistentDescriptorSet&gt; (10 samples, 0.10%)</title><rect x="28.5862%" y="149" width="0.1035%" height="15" fill="rgb(250,79,13)" fg:x="2762" fg:w="10"/><text x="28.6462%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="28.6587%" y="133" width="0.0310%" height="15" fill="rgb(211,146,34)" fg:x="2769" fg:w="3"/><text x="28.7187%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;vulkano::descriptor_set::pool::standard::Pool&gt;&gt;&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="28.6587%" y="117" width="0.0310%" height="15" fill="rgb(228,22,38)" fg:x="2769" fg:w="3"/><text x="28.7187%" y="127.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="28.6587%" y="101" width="0.0310%" height="15" fill="rgb(235,168,5)" fg:x="2769" fg:w="3"/><text x="28.7187%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;vulkano::descriptor_set::pool::standard::Pool&gt;&gt; (3 samples, 0.03%)</title><rect x="28.6587%" y="85" width="0.0310%" height="15" fill="rgb(221,155,16)" fg:x="2769" fg:w="3"/><text x="28.7187%" y="95.50"></text></g><g><title>amdgpu_va_range_free (1 samples, 0.01%)</title><rect x="28.6794%" y="69" width="0.0103%" height="15" fill="rgb(215,215,53)" fg:x="2771" fg:w="1"/><text x="28.7394%" y="79.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="28.6897%" y="213" width="0.0621%" height="15" fill="rgb(223,4,10)" fg:x="2772" fg:w="6"/><text x="28.7497%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="28.7104%" y="197" width="0.0414%" height="15" fill="rgb(234,103,6)" fg:x="2774" fg:w="4"/><text x="28.7704%" y="207.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="28.7311%" y="181" width="0.0207%" height="15" fill="rgb(227,97,0)" fg:x="2776" fg:w="2"/><text x="28.7911%" y="191.50"></text></g><g><title>_int_free (8 samples, 0.08%)</title><rect x="28.7518%" y="213" width="0.0828%" height="15" fill="rgb(234,150,53)" fg:x="2778" fg:w="8"/><text x="28.8118%" y="223.50"></text></g><g><title>malloc_consolidate (7 samples, 0.07%)</title><rect x="28.7622%" y="197" width="0.0724%" height="15" fill="rgb(228,201,54)" fg:x="2779" fg:w="7"/><text x="28.8222%" y="207.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="28.8243%" y="181" width="0.0103%" height="15" fill="rgb(222,22,37)" fg:x="2785" fg:w="1"/><text x="28.8843%" y="191.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="28.8553%" y="165" width="0.0103%" height="15" fill="rgb(237,53,32)" fg:x="2788" fg:w="1"/><text x="28.9153%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.08%)</title><rect x="28.8450%" y="197" width="0.0828%" height="15" fill="rgb(233,25,53)" fg:x="2787" fg:w="8"/><text x="28.9050%" y="207.50"></text></g><g><title>&lt;vulkano::buffer::cpu_pool::CpuBufferPoolChunk&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.08%)</title><rect x="28.8450%" y="181" width="0.0828%" height="15" fill="rgb(210,40,34)" fg:x="2787" fg:w="8"/><text x="28.9050%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.06%)</title><rect x="28.8657%" y="165" width="0.0621%" height="15" fill="rgb(241,220,44)" fg:x="2789" fg:w="6"/><text x="28.9257%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt; (41 samples, 0.42%)</title><rect x="28.5241%" y="229" width="0.4243%" height="15" fill="rgb(235,28,35)" fg:x="2756" fg:w="41"/><text x="28.5841%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.11%)</title><rect x="28.8346%" y="213" width="0.1138%" height="15" fill="rgb(210,56,17)" fg:x="2786" fg:w="11"/><text x="28.8946%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;vulkano::buffer::cpu_pool::CpuBufferPoolSubbuffer&lt;foxterm::shaders::fragment::ty::Data,alloc::sync::Arc&lt;vulkano::memory::pool::pool::StdMemoryPool&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="28.9278%" y="197" width="0.0207%" height="15" fill="rgb(224,130,29)" fg:x="2795" fg:w="2"/><text x="28.9878%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::swapchain::swapchain::PresentFuture&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;,winit::window::Window&gt;&gt; (42 samples, 0.43%)</title><rect x="28.5241%" y="261" width="0.4347%" height="15" fill="rgb(235,212,8)" fg:x="2756" fg:w="42"/><text x="28.5841%" y="271.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;&gt; (42 samples, 0.43%)</title><rect x="28.5241%" y="245" width="0.4347%" height="15" fill="rgb(223,33,50)" fg:x="2756" fg:w="42"/><text x="28.5841%" y="255.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;vulkano::swapchain::swapchain::PresentFuture&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;,winit::window::Window&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="28.9485%" y="229" width="0.0103%" height="15" fill="rgb(219,149,13)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="239.50"></text></g><g><title>&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="28.9485%" y="213" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::swapchain::swapchain::PresentFuture&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;,winit::window::Window&gt;&gt; (1 samples, 0.01%)</title><rect x="28.9485%" y="197" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;vulkano::sync::future::join::JoinFuture&lt;alloc::boxed::Box&lt;dyn vulkano::sync::future::GpuFuture&gt;,vulkano::swapchain::swapchain::SwapchainAcquireFuture&lt;winit::window::Window&gt;&gt;,vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt;&gt; (1 samples, 0.01%)</title><rect x="28.9485%" y="181" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;vulkano::command_buffer::auto::PrimaryAutoCommandBuffer&gt; (1 samples, 0.01%)</title><rect x="28.9485%" y="165" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="28.9485%" y="149" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="28.9485%" y="133" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="143.50"></text></g><g><title>&lt;vulkano::buffer::cpu_pool::CpuBufferPoolChunk&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="28.9485%" y="117" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="127.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="28.9485%" y="101" width="0.0103%" height="15" fill="rgb(254,173,49)" fg:x="2797" fg:w="1"/><text x="29.0085%" y="111.50"></text></g><g><title>vulkano::command_buffer::synced::SyncCommandBuffer::unlock (9 samples, 0.09%)</title><rect x="28.9588%" y="261" width="0.0931%" height="15" fill="rgb(221,1,38)" fg:x="2798" fg:w="9"/><text x="29.0188%" y="271.50"></text></g><g><title>&lt;T as vulkano::buffer::traits::BufferAccess&gt;::unlock (7 samples, 0.07%)</title><rect x="28.9795%" y="245" width="0.0724%" height="15" fill="rgb(206,124,46)" fg:x="2800" fg:w="7"/><text x="29.0395%" y="255.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="29.0416%" y="229" width="0.0103%" height="15" fill="rgb(249,21,11)" fg:x="2806" fg:w="1"/><text x="29.1016%" y="239.50"></text></g><g><title>&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::cleanup_finished (2,248 samples, 23.27%)</title><rect x="5.7959%" y="277" width="23.2664%" height="15" fill="rgb(222,201,40)" fg:x="560" fg:w="2248"/><text x="5.8559%" y="287.50">&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::cleanup_finished</text></g><g><title>vulkano::sync::fence::Fence::wait (1 samples, 0.01%)</title><rect x="29.0520%" y="261" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="2807" fg:w="1"/><text x="29.1120%" y="271.50"></text></g><g><title>drmSyncobjWait (1 samples, 0.01%)</title><rect x="29.0520%" y="245" width="0.0103%" height="15" fill="rgb(219,207,3)" fg:x="2807" fg:w="1"/><text x="29.1120%" y="255.50"></text></g><g><title>drmIoctl (1 samples, 0.01%)</title><rect x="29.0520%" y="229" width="0.0103%" height="15" fill="rgb(222,56,46)" fg:x="2807" fg:w="1"/><text x="29.1120%" y="239.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="29.0520%" y="213" width="0.0103%" height="15" fill="rgb(239,76,54)" fg:x="2807" fg:w="1"/><text x="29.1120%" y="223.50"></text></g><g><title>new_heap (1 samples, 0.01%)</title><rect x="29.7040%" y="245" width="0.0103%" height="15" fill="rgb(231,124,27)" fg:x="2870" fg:w="1"/><text x="29.7640%" y="255.50"></text></g><g><title>__GI___libc_malloc (67 samples, 0.69%)</title><rect x="29.0623%" y="277" width="0.6934%" height="15" fill="rgb(249,195,6)" fg:x="2808" fg:w="67"/><text x="29.1223%" y="287.50">__..</text></g><g><title>_int_malloc (46 samples, 0.48%)</title><rect x="29.2797%" y="261" width="0.4761%" height="15" fill="rgb(237,174,47)" fg:x="2829" fg:w="46"/><text x="29.3397%" y="271.50">_..</text></g><g><title>unlink_chunk (4 samples, 0.04%)</title><rect x="29.7143%" y="245" width="0.0414%" height="15" fill="rgb(206,201,31)" fg:x="2871" fg:w="4"/><text x="29.7743%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="29.7557%" y="277" width="0.0103%" height="15" fill="rgb(231,57,52)" fg:x="2875" fg:w="1"/><text x="29.8157%" y="287.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="29.7661%" y="277" width="0.0207%" height="15" fill="rgb(248,177,22)" fg:x="2876" fg:w="2"/><text x="29.8261%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="29.7661%" y="261" width="0.0207%" height="15" fill="rgb(215,211,37)" fg:x="2876" fg:w="2"/><text x="29.8261%" y="271.50"></text></g><g><title>_int_free (13 samples, 0.13%)</title><rect x="29.7868%" y="277" width="0.1345%" height="15" fill="rgb(241,128,51)" fg:x="2878" fg:w="13"/><text x="29.8468%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.06%)</title><rect x="29.9420%" y="213" width="0.0621%" height="15" fill="rgb(227,165,31)" fg:x="2893" fg:w="6"/><text x="30.0020%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.09%)</title><rect x="29.9213%" y="277" width="0.0931%" height="15" fill="rgb(228,167,24)" fg:x="2891" fg:w="9"/><text x="29.9813%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.08%)</title><rect x="29.9317%" y="261" width="0.0828%" height="15" fill="rgb(228,143,12)" fg:x="2892" fg:w="8"/><text x="29.9917%" y="271.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.08%)</title><rect x="29.9317%" y="245" width="0.0828%" height="15" fill="rgb(249,149,8)" fg:x="2892" fg:w="8"/><text x="29.9917%" y="255.50"></text></g><g><title>_int_realloc (8 samples, 0.08%)</title><rect x="29.9317%" y="229" width="0.0828%" height="15" fill="rgb(243,35,44)" fg:x="2892" fg:w="8"/><text x="29.9917%" y="239.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="30.0041%" y="213" width="0.0103%" height="15" fill="rgb(246,89,9)" fg:x="2899" fg:w="1"/><text x="30.0641%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (59 samples, 0.61%)</title><rect x="30.0145%" y="277" width="0.6106%" height="15" fill="rgb(233,213,13)" fg:x="2900" fg:w="59"/><text x="30.0745%" y="287.50">co..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.31%)</title><rect x="30.3146%" y="261" width="0.3105%" height="15" fill="rgb(233,141,41)" fg:x="2929" fg:w="30"/><text x="30.3746%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (13 samples, 0.13%)</title><rect x="30.6251%" y="277" width="0.1345%" height="15" fill="rgb(239,167,4)" fg:x="2959" fg:w="13"/><text x="30.6851%" y="287.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="30.9977%" y="261" width="0.0103%" height="15" fill="rgb(209,217,16)" fg:x="2995" fg:w="1"/><text x="31.0577%" y="271.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="31.0081%" y="261" width="0.0207%" height="15" fill="rgb(219,88,35)" fg:x="2996" fg:w="2"/><text x="31.0681%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.49%)</title><rect x="30.7597%" y="277" width="0.4864%" height="15" fill="rgb(220,193,23)" fg:x="2972" fg:w="47"/><text x="30.8197%" y="287.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.22%)</title><rect x="31.0288%" y="261" width="0.2173%" height="15" fill="rgb(230,90,52)" fg:x="2998" fg:w="21"/><text x="31.0888%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.08%)</title><rect x="31.1633%" y="245" width="0.0828%" height="15" fill="rgb(252,106,19)" fg:x="3011" fg:w="8"/><text x="31.2233%" y="255.50"></text></g><g><title>Unknown (4 samples, 0.04%)</title><rect x="31.2565%" y="261" width="0.0414%" height="15" fill="rgb(206,74,20)" fg:x="3020" fg:w="4"/><text x="31.3165%" y="271.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.04%)</title><rect x="31.2979%" y="261" width="0.0414%" height="15" fill="rgb(230,138,44)" fg:x="3024" fg:w="4"/><text x="31.3579%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="31.3393%" y="261" width="0.0103%" height="15" fill="rgb(235,182,43)" fg:x="3028" fg:w="1"/><text x="31.3993%" y="271.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (7 samples, 0.07%)</title><rect x="31.3496%" y="261" width="0.0724%" height="15" fill="rgb(242,16,51)" fg:x="3029" fg:w="7"/><text x="31.4096%" y="271.50"></text></g><g><title>__GI___pthread_mutex_lock (11 samples, 0.11%)</title><rect x="59.2010%" y="245" width="0.1138%" height="15" fill="rgb(248,9,4)" fg:x="5720" fg:w="11"/><text x="59.2610%" y="255.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.03%)</title><rect x="59.3148%" y="245" width="0.0310%" height="15" fill="rgb(210,31,22)" fg:x="5731" fg:w="3"/><text x="59.3748%" y="255.50"></text></g><g><title>vulkano::memory::device_memory::MappedDeviceMemory::flush_range (2 samples, 0.02%)</title><rect x="59.3459%" y="245" width="0.0207%" height="15" fill="rgb(239,54,39)" fg:x="5734" fg:w="2"/><text x="59.4059%" y="255.50"></text></g><g><title>vulkano::buffer::cpu_pool::CpuBufferPool&lt;T,A&gt;::chunk_impl (2,720 samples, 28.15%)</title><rect x="31.2461%" y="277" width="28.1515%" height="15" fill="rgb(230,99,41)" fg:x="3019" fg:w="2720"/><text x="31.3061%" y="287.50">vulkano::buffer::cpu_pool::CpuBufferPool&lt;T,A&gt;::chunk_impl</text></g><g><title>vulkano::buffer::cpu_pool::CpuBufferPool&lt;T,A&gt;::try_next_impl (2,703 samples, 27.98%)</title><rect x="31.4221%" y="261" width="27.9756%" height="15" fill="rgb(253,106,12)" fg:x="3036" fg:w="2703"/><text x="31.4821%" y="271.50">vulkano::buffer::cpu_pool::CpuBufferPool&lt;T,A&gt;::try_next_impl</text></g><g><title>vulkano::memory::device_memory::MappedDeviceMemory::read (3 samples, 0.03%)</title><rect x="59.3666%" y="245" width="0.0310%" height="15" fill="rgb(213,46,41)" fg:x="5736" fg:w="3"/><text x="59.4266%" y="255.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="59.7495%" y="245" width="0.0310%" height="15" fill="rgb(215,133,35)" fg:x="5773" fg:w="3"/><text x="59.8095%" y="255.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.01%)</title><rect x="59.7702%" y="229" width="0.0103%" height="15" fill="rgb(213,28,5)" fg:x="5775" fg:w="1"/><text x="59.8302%" y="239.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (2 samples, 0.02%)</title><rect x="59.7806%" y="245" width="0.0207%" height="15" fill="rgb(215,77,49)" fg:x="5776" fg:w="2"/><text x="59.8406%" y="255.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.14%)</title><rect x="59.6667%" y="261" width="0.1449%" height="15" fill="rgb(248,100,22)" fg:x="5765" fg:w="14"/><text x="59.7267%" y="271.50"></text></g><g><title>vulkano::descriptor_set::DescriptorSetInner::layout (1 samples, 0.01%)</title><rect x="59.8013%" y="245" width="0.0103%" height="15" fill="rgb(208,67,9)" fg:x="5778" fg:w="1"/><text x="59.8613%" y="255.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="59.8116%" y="261" width="0.0207%" height="15" fill="rgb(219,133,21)" fg:x="5779" fg:w="2"/><text x="59.8716%" y="271.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="59.8323%" y="261" width="0.0103%" height="15" fill="rgb(246,46,29)" fg:x="5781" fg:w="1"/><text x="59.8923%" y="271.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.01%)</title><rect x="59.8323%" y="245" width="0.0103%" height="15" fill="rgb(246,185,52)" fg:x="5781" fg:w="1"/><text x="59.8923%" y="255.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="59.8427%" y="261" width="0.0103%" height="15" fill="rgb(252,136,11)" fg:x="5782" fg:w="1"/><text x="59.9027%" y="271.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="59.9048%" y="245" width="0.0103%" height="15" fill="rgb(219,138,53)" fg:x="5788" fg:w="1"/><text x="59.9648%" y="255.50"></text></g><g><title>__GI___libc_malloc (39 samples, 0.40%)</title><rect x="59.8530%" y="261" width="0.4036%" height="15" fill="rgb(211,51,23)" fg:x="5783" fg:w="39"/><text x="59.9130%" y="271.50"></text></g><g><title>_int_malloc (33 samples, 0.34%)</title><rect x="59.9151%" y="245" width="0.3415%" height="15" fill="rgb(247,221,28)" fg:x="5789" fg:w="33"/><text x="59.9751%" y="255.50"></text></g><g><title>unlink_chunk (7 samples, 0.07%)</title><rect x="60.1842%" y="229" width="0.0724%" height="15" fill="rgb(251,222,45)" fg:x="5815" fg:w="7"/><text x="60.2442%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.22%)</title><rect x="60.2567%" y="261" width="0.2173%" height="15" fill="rgb(217,162,53)" fg:x="5822" fg:w="21"/><text x="60.3167%" y="271.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="60.4740%" y="261" width="0.0310%" height="15" fill="rgb(229,93,14)" fg:x="5843" fg:w="3"/><text x="60.5340%" y="271.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="60.4740%" y="245" width="0.0310%" height="15" fill="rgb(209,67,49)" fg:x="5843" fg:w="3"/><text x="60.5340%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.10%)</title><rect x="60.5051%" y="261" width="0.1035%" height="15" fill="rgb(213,87,29)" fg:x="5846" fg:w="10"/><text x="60.5651%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.05%)</title><rect x="60.5568%" y="245" width="0.0517%" height="15" fill="rgb(205,151,52)" fg:x="5851" fg:w="5"/><text x="60.6168%" y="255.50"></text></g><g><title>vulkano::command_buffer::auto::AutoCommandBufferBuilder&lt;L,P&gt;::bind_descriptor_sets (132 samples, 1.37%)</title><rect x="59.3976%" y="277" width="1.3662%" height="15" fill="rgb(253,215,39)" fg:x="5739" fg:w="132"/><text x="59.4576%" y="287.50">vulkano..</text></g><g><title>vulkano::command_buffer::synced::builder::CurrentState::invalidate_descriptor_sets (15 samples, 0.16%)</title><rect x="60.6086%" y="261" width="0.1552%" height="15" fill="rgb(221,220,41)" fg:x="5856" fg:w="15"/><text x="60.6686%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.04%)</title><rect x="60.7224%" y="245" width="0.0414%" height="15" fill="rgb(218,133,21)" fg:x="5867" fg:w="4"/><text x="60.7824%" y="255.50"></text></g><g><title>vulkano::command_buffer::auto::AutoCommandBufferBuilder&lt;L,P&gt;::bind_index_buffer (10 samples, 0.10%)</title><rect x="60.7638%" y="277" width="0.1035%" height="15" fill="rgb(221,193,43)" fg:x="5871" fg:w="10"/><text x="60.8238%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="60.8570%" y="261" width="0.0103%" height="15" fill="rgb(240,128,52)" fg:x="5880" fg:w="1"/><text x="60.9170%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="60.8570%" y="245" width="0.0103%" height="15" fill="rgb(253,114,12)" fg:x="5880" fg:w="1"/><text x="60.9170%" y="255.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="60.8570%" y="229" width="0.0103%" height="15" fill="rgb(215,223,47)" fg:x="5880" fg:w="1"/><text x="60.9170%" y="239.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="60.8570%" y="213" width="0.0103%" height="15" fill="rgb(248,225,23)" fg:x="5880" fg:w="1"/><text x="60.9170%" y="223.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="61.0847%" y="261" width="0.0207%" height="15" fill="rgb(250,108,0)" fg:x="5902" fg:w="2"/><text x="61.1447%" y="271.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.05%)</title><rect x="61.1054%" y="261" width="0.0517%" height="15" fill="rgb(228,208,7)" fg:x="5904" fg:w="5"/><text x="61.1654%" y="271.50"></text></g><g><title>tcache_get (5 samples, 0.05%)</title><rect x="61.1054%" y="245" width="0.0517%" height="15" fill="rgb(244,45,10)" fg:x="5904" fg:w="5"/><text x="61.1654%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="61.1571%" y="261" width="0.0103%" height="15" fill="rgb(207,125,25)" fg:x="5909" fg:w="1"/><text x="61.2171%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="61.1571%" y="245" width="0.0103%" height="15" fill="rgb(210,195,18)" fg:x="5909" fg:w="1"/><text x="61.2171%" y="255.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="61.1571%" y="229" width="0.0103%" height="15" fill="rgb(249,80,12)" fg:x="5909" fg:w="1"/><text x="61.2171%" y="239.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="61.1571%" y="213" width="0.0103%" height="15" fill="rgb(221,65,9)" fg:x="5909" fg:w="1"/><text x="61.2171%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="61.1571%" y="197" width="0.0103%" height="15" fill="rgb(235,49,36)" fg:x="5909" fg:w="1"/><text x="61.2171%" y="207.50"></text></g><g><title>vulkano::command_buffer::synced::builder::CurrentState::reset_dynamic_states (28 samples, 0.29%)</title><rect x="61.1675%" y="261" width="0.2898%" height="15" fill="rgb(225,32,20)" fg:x="5910" fg:w="28"/><text x="61.2275%" y="271.50"></text></g><g><title>vulkano::command_buffer::auto::AutoCommandBufferBuilder&lt;L,P&gt;::bind_pipeline_graphics (58 samples, 0.60%)</title><rect x="60.8673%" y="277" width="0.6003%" height="15" fill="rgb(215,141,46)" fg:x="5881" fg:w="58"/><text x="60.9273%" y="287.50">vu..</text></g><g><title>vulkano::pipeline::graphics::GraphicsPipeline::dynamic_states (1 samples, 0.01%)</title><rect x="61.4573%" y="261" width="0.0103%" height="15" fill="rgb(250,160,47)" fg:x="5938" fg:w="1"/><text x="61.5173%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="61.7160%" y="261" width="0.0207%" height="15" fill="rgb(216,222,40)" fg:x="5963" fg:w="2"/><text x="61.7760%" y="271.50"></text></g><g><title>&lt;vulkano::buffer::immutable::ImmutableBuffer&lt;T,A&gt; as vulkano::buffer::traits::BufferAccess&gt;::inner (2 samples, 0.02%)</title><rect x="61.7367%" y="261" width="0.0207%" height="15" fill="rgb(234,217,39)" fg:x="5965" fg:w="2"/><text x="61.7967%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="61.7574%" y="261" width="0.0103%" height="15" fill="rgb(207,178,40)" fg:x="5967" fg:w="1"/><text x="61.8174%" y="271.50"></text></g><g><title>_int_malloc (7 samples, 0.07%)</title><rect x="61.7677%" y="245" width="0.0724%" height="15" fill="rgb(221,136,13)" fg:x="5968" fg:w="7"/><text x="61.8277%" y="255.50"></text></g><g><title>new_heap (1 samples, 0.01%)</title><rect x="61.8298%" y="229" width="0.0103%" height="15" fill="rgb(249,199,10)" fg:x="5974" fg:w="1"/><text x="61.8898%" y="239.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.17%)</title><rect x="61.7677%" y="261" width="0.1656%" height="15" fill="rgb(249,222,13)" fg:x="5968" fg:w="16"/><text x="61.8277%" y="271.50"></text></g><g><title>checked_request2size (9 samples, 0.09%)</title><rect x="61.8402%" y="245" width="0.0931%" height="15" fill="rgb(244,185,38)" fg:x="5975" fg:w="9"/><text x="61.9002%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (9 samples, 0.09%)</title><rect x="61.9333%" y="261" width="0.0931%" height="15" fill="rgb(236,202,9)" fg:x="5984" fg:w="9"/><text x="61.9933%" y="271.50"></text></g><g><title>_int_free (5 samples, 0.05%)</title><rect x="62.0265%" y="261" width="0.0517%" height="15" fill="rgb(250,229,37)" fg:x="5993" fg:w="5"/><text x="62.0865%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.13%)</title><rect x="62.0782%" y="261" width="0.1345%" height="15" fill="rgb(206,174,23)" fg:x="5998" fg:w="13"/><text x="62.1382%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.07%)</title><rect x="62.1403%" y="245" width="0.0724%" height="15" fill="rgb(211,33,43)" fg:x="6004" fg:w="7"/><text x="62.2003%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="62.2024%" y="229" width="0.0103%" height="15" fill="rgb(245,58,50)" fg:x="6010" fg:w="1"/><text x="62.2624%" y="239.50"></text></g><g><title>rust_oom (2 samples, 0.02%)</title><rect x="62.2128%" y="261" width="0.0207%" height="15" fill="rgb(244,68,36)" fg:x="6011" fg:w="2"/><text x="62.2728%" y="271.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (4 samples, 0.04%)</title><rect x="62.2335%" y="245" width="0.0414%" height="15" fill="rgb(232,229,15)" fg:x="6013" fg:w="4"/><text x="62.2935%" y="255.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.04%)</title><rect x="62.2335%" y="229" width="0.0414%" height="15" fill="rgb(254,30,23)" fg:x="6013" fg:w="4"/><text x="62.2935%" y="239.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.04%)</title><rect x="62.2335%" y="213" width="0.0414%" height="15" fill="rgb(235,160,14)" fg:x="6013" fg:w="4"/><text x="62.2935%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="62.2335%" y="197" width="0.0414%" height="15" fill="rgb(212,155,44)" fg:x="6013" fg:w="4"/><text x="62.2935%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="62.2335%" y="181" width="0.0414%" height="15" fill="rgb(226,2,50)" fg:x="6013" fg:w="4"/><text x="62.2935%" y="191.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="62.2335%" y="165" width="0.0414%" height="15" fill="rgb(234,177,6)" fg:x="6013" fg:w="4"/><text x="62.2935%" y="175.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="62.2335%" y="149" width="0.0414%" height="15" fill="rgb(217,24,9)" fg:x="6013" fg:w="4"/><text x="62.2935%" y="159.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="62.2645%" y="133" width="0.0103%" height="15" fill="rgb(220,13,46)" fg:x="6016" fg:w="1"/><text x="62.3245%" y="143.50"></text></g><g><title>vulkano::command_buffer::auto::AutoCommandBufferBuilder&lt;L,P&gt;::bind_vertex_buffers (84 samples, 0.87%)</title><rect x="61.4676%" y="277" width="0.8694%" height="15" fill="rgb(239,221,27)" fg:x="5939" fg:w="84"/><text x="61.5276%" y="287.50">vulk..</text></g><g><title>std::sys_common::mutex::MovableMutex::new (10 samples, 0.10%)</title><rect x="62.2335%" y="261" width="0.1035%" height="15" fill="rgb(222,198,25)" fg:x="6013" fg:w="10"/><text x="62.2935%" y="271.50"></text></g><g><title>std::sys::unix::mutex::Mutex::init (6 samples, 0.06%)</title><rect x="62.2749%" y="245" width="0.0621%" height="15" fill="rgb(211,99,13)" fg:x="6017" fg:w="6"/><text x="62.3349%" y="255.50"></text></g><g><title>__rdl_alloc (7 samples, 0.07%)</title><rect x="62.3370%" y="245" width="0.0724%" height="15" fill="rgb(232,111,31)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.07%)</title><rect x="62.3370%" y="229" width="0.0724%" height="15" fill="rgb(245,82,37)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="239.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (7 samples, 0.07%)</title><rect x="62.3370%" y="213" width="0.0724%" height="15" fill="rgb(227,149,46)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="223.50"></text></g><g><title>__posix_memalign (7 samples, 0.07%)</title><rect x="62.3370%" y="197" width="0.0724%" height="15" fill="rgb(218,36,50)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="207.50"></text></g><g><title>__posix_memalign (7 samples, 0.07%)</title><rect x="62.3370%" y="181" width="0.0724%" height="15" fill="rgb(226,80,48)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="191.50"></text></g><g><title>_mid_memalign (7 samples, 0.07%)</title><rect x="62.3370%" y="165" width="0.0724%" height="15" fill="rgb(238,224,15)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="175.50"></text></g><g><title>_int_memalign (7 samples, 0.07%)</title><rect x="62.3370%" y="149" width="0.0724%" height="15" fill="rgb(241,136,10)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="159.50"></text></g><g><title>_int_malloc (7 samples, 0.07%)</title><rect x="62.3370%" y="133" width="0.0724%" height="15" fill="rgb(208,32,45)" fg:x="6023" fg:w="7"/><text x="62.3970%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="62.4094%" y="245" width="0.0103%" height="15" fill="rgb(207,135,9)" fg:x="6030" fg:w="1"/><text x="62.4694%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="62.4094%" y="229" width="0.0103%" height="15" fill="rgb(206,86,44)" fg:x="6030" fg:w="1"/><text x="62.4694%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="62.4094%" y="213" width="0.0103%" height="15" fill="rgb(245,177,15)" fg:x="6030" fg:w="1"/><text x="62.4694%" y="223.50"></text></g><g><title>vulkano::command_buffer::pool::standard::&lt;impl vulkano::command_buffer::pool::CommandPool for alloc::sync::Arc&lt;vulkano::command_buffer::pool::standard::StandardCommandPool&gt;&gt;::allocate (9 samples, 0.09%)</title><rect x="62.3370%" y="261" width="0.0931%" height="15" fill="rgb(206,64,50)" fg:x="6023" fg:w="9"/><text x="62.3970%" y="271.50"></text></g><g><title>vulkano::command_buffer::pool::sys::UnsafeCommandPool::allocate_command_buffers (1 samples, 0.01%)</title><rect x="62.4198%" y="245" width="0.0103%" height="15" fill="rgb(234,36,40)" fg:x="6031" fg:w="1"/><text x="62.4798%" y="255.50"></text></g><g><title>vkAllocateCommandBuffers (1 samples, 0.01%)</title><rect x="62.4198%" y="229" width="0.0103%" height="15" fill="rgb(213,64,8)" fg:x="6031" fg:w="1"/><text x="62.4798%" y="239.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="62.4198%" y="213" width="0.0103%" height="15" fill="rgb(210,75,36)" fg:x="6031" fg:w="1"/><text x="62.4798%" y="223.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="62.4198%" y="197" width="0.0103%" height="15" fill="rgb(229,88,21)" fg:x="6031" fg:w="1"/><text x="62.4798%" y="207.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="62.4198%" y="181" width="0.0103%" height="15" fill="rgb(252,204,47)" fg:x="6031" fg:w="1"/><text x="62.4798%" y="191.50"></text></g><g><title>vulkano::command_buffer::auto::AutoCommandBufferBuilder&lt;L&gt;::with_level (10 samples, 0.10%)</title><rect x="62.3370%" y="277" width="0.1035%" height="15" fill="rgb(208,77,27)" fg:x="6023" fg:w="10"/><text x="62.3970%" y="287.50"></text></g><g><title>vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder::new (1 samples, 0.01%)</title><rect x="62.4301%" y="261" width="0.0103%" height="15" fill="rgb(221,76,26)" fg:x="6032" fg:w="1"/><text x="62.4901%" y="271.50"></text></g><g><title>vulkano::command_buffer::sys::UnsafeCommandBufferBuilder::new (1 samples, 0.01%)</title><rect x="62.4301%" y="245" width="0.0103%" height="15" fill="rgb(225,139,18)" fg:x="6032" fg:w="1"/><text x="62.4901%" y="255.50"></text></g><g><title>amdgpu_bo_va_op_raw (1 samples, 0.01%)</title><rect x="62.4301%" y="229" width="0.0103%" height="15" fill="rgb(230,137,11)" fg:x="6032" fg:w="1"/><text x="62.4901%" y="239.50"></text></g><g><title>drmCommandWriteRead (1 samples, 0.01%)</title><rect x="62.4301%" y="213" width="0.0103%" height="15" fill="rgb(212,28,1)" fg:x="6032" fg:w="1"/><text x="62.4901%" y="223.50"></text></g><g><title>drmIoctl (1 samples, 0.01%)</title><rect x="62.4301%" y="197" width="0.0103%" height="15" fill="rgb(248,164,17)" fg:x="6032" fg:w="1"/><text x="62.4901%" y="207.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="62.4301%" y="181" width="0.0103%" height="15" fill="rgb(222,171,42)" fg:x="6032" fg:w="1"/><text x="62.4901%" y="191.50"></text></g><g><title>&lt;T as vulkano::buffer::traits::BufferAccess&gt;::conflict_key (1 samples, 0.01%)</title><rect x="62.8234%" y="261" width="0.0103%" height="15" fill="rgb(243,84,45)" fg:x="6070" fg:w="1"/><text x="62.8834%" y="271.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="81.5877%" y="245" width="0.0103%" height="15" fill="rgb(252,49,23)" fg:x="7883" fg:w="1"/><text x="81.6477%" y="255.50"></text></g><g><title>&lt;T as vulkano::buffer::traits::BufferAccess&gt;::try_gpu_lock (1,818 samples, 18.82%)</title><rect x="62.8338%" y="261" width="18.8160%" height="15" fill="rgb(215,19,7)" fg:x="6071" fg:w="1818"/><text x="62.8938%" y="271.50">&lt;T as vulkano::buffer::traits::BufferAccess&gt;::try_gpu_lock</text></g><g><title>__pthread_mutex_unlock_usercnt (5 samples, 0.05%)</title><rect x="81.5980%" y="245" width="0.0517%" height="15" fill="rgb(238,81,41)" fg:x="7884" fg:w="5"/><text x="81.6580%" y="255.50"></text></g><g><title>&lt;T as vulkano::buffer::traits::BufferAccess&gt;::conflict_key (33 samples, 0.34%)</title><rect x="81.7636%" y="229" width="0.3415%" height="15" fill="rgb(210,199,37)" fg:x="7900" fg:w="33"/><text x="81.8236%" y="239.50"></text></g><g><title>&lt;ash::vk::definitions::QueryPool as ash::vk::Handle&gt;::from_raw (1 samples, 0.01%)</title><rect x="82.0948%" y="213" width="0.0103%" height="15" fill="rgb(244,192,49)" fg:x="7932" fg:w="1"/><text x="82.1548%" y="223.50"></text></g><g><title>&lt;vulkano::buffer::immutable::ImmutableBuffer&lt;T,A&gt; as vulkano::buffer::traits::BufferAccess&gt;::conflict_key (4 samples, 0.04%)</title><rect x="82.1052%" y="229" width="0.0414%" height="15" fill="rgb(226,211,11)" fg:x="7933" fg:w="4"/><text x="82.1652%" y="239.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.05%)</title><rect x="82.1776%" y="213" width="0.0517%" height="15" fill="rgb(236,162,54)" fg:x="7940" fg:w="5"/><text x="82.2376%" y="223.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="82.2294%" y="213" width="0.0103%" height="15" fill="rgb(220,229,9)" fg:x="7945" fg:w="1"/><text x="82.2894%" y="223.50"></text></g><g><title>&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::check_buffer_access (12 samples, 0.12%)</title><rect x="82.1466%" y="229" width="0.1242%" height="15" fill="rgb(250,87,22)" fg:x="7937" fg:w="12"/><text x="82.2066%" y="239.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.03%)</title><rect x="82.2397%" y="213" width="0.0310%" height="15" fill="rgb(239,43,17)" fg:x="7946" fg:w="3"/><text x="82.2997%" y="223.50"></text></g><g><title>__GI___pthread_mutex_lock (3 samples, 0.03%)</title><rect x="82.2708%" y="229" width="0.0310%" height="15" fill="rgb(231,177,25)" fg:x="7949" fg:w="3"/><text x="82.3308%" y="239.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (6 samples, 0.06%)</title><rect x="82.3018%" y="229" width="0.0621%" height="15" fill="rgb(219,179,1)" fg:x="7952" fg:w="6"/><text x="82.3618%" y="239.50"></text></g><g><title>&lt;vulkano::sync::future::join::JoinFuture&lt;A,B&gt; as vulkano::sync::future::GpuFuture&gt;::check_buffer_access (102 samples, 1.06%)</title><rect x="81.6498%" y="261" width="1.0557%" height="15" fill="rgb(238,219,53)" fg:x="7889" fg:w="102"/><text x="81.7098%" y="271.50">&lt;vulk..</text></g><g><title>&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::check_buffer_access (96 samples, 0.99%)</title><rect x="81.7119%" y="245" width="0.9936%" height="15" fill="rgb(232,167,36)" fg:x="7895" fg:w="96"/><text x="81.7719%" y="255.50">&lt;vulk..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 0.34%)</title><rect x="82.3639%" y="229" width="0.3415%" height="15" fill="rgb(244,19,51)" fg:x="7958" fg:w="33"/><text x="82.4239%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.17%)</title><rect x="82.5398%" y="213" width="0.1656%" height="15" fill="rgb(224,6,22)" fg:x="7975" fg:w="16"/><text x="82.5998%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.08%)</title><rect x="82.6226%" y="197" width="0.0828%" height="15" fill="rgb(224,145,5)" fg:x="7983" fg:w="8"/><text x="82.6826%" y="207.50"></text></g><g><title>vulkano::command_buffer::synced::SyncCommandBuffer::lock_submit (1,960 samples, 20.29%)</title><rect x="62.4405%" y="277" width="20.2857%" height="15" fill="rgb(234,130,49)" fg:x="6033" fg:w="1960"/><text x="62.5005%" y="287.50">vulkano::command_buffer::synced::SyncCommandBuffer::lock_submit</text></g><g><title>&lt;vulkano::sync::future::join::JoinFuture&lt;A,B&gt; as vulkano::sync::future::GpuFuture&gt;::check_image_access (2 samples, 0.02%)</title><rect x="82.7054%" y="261" width="0.0207%" height="15" fill="rgb(254,6,2)" fg:x="7991" fg:w="2"/><text x="82.7654%" y="271.50"></text></g><g><title>&lt;vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt; as vulkano::sync::future::GpuFuture&gt;::check_image_access (1 samples, 0.01%)</title><rect x="82.7158%" y="245" width="0.0103%" height="15" fill="rgb(208,96,46)" fg:x="7992" fg:w="1"/><text x="82.7758%" y="255.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="82.7158%" y="229" width="0.0103%" height="15" fill="rgb(239,3,39)" fg:x="7992" fg:w="1"/><text x="82.7758%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="82.7158%" y="213" width="0.0103%" height="15" fill="rgb(233,210,1)" fg:x="7992" fg:w="1"/><text x="82.7758%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.7158%" y="197" width="0.0103%" height="15" fill="rgb(244,137,37)" fg:x="7992" fg:w="1"/><text x="82.7758%" y="207.50"></text></g><g><title>&lt;vulkano::image::view::ImageView&lt;I&gt; as vulkano::image::view::ImageViewAbstract&gt;::image (1 samples, 0.01%)</title><rect x="84.1544%" y="245" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="8131" fg:w="1"/><text x="84.2144%" y="255.50"></text></g><g><title>alloc::string::String::with_capacity (9 samples, 0.09%)</title><rect x="84.2372%" y="229" width="0.0931%" height="15" fill="rgb(239,18,37)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.09%)</title><rect x="84.2372%" y="213" width="0.0931%" height="15" fill="rgb(218,185,22)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.09%)</title><rect x="84.2372%" y="197" width="0.0931%" height="15" fill="rgb(225,218,4)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.09%)</title><rect x="84.2372%" y="181" width="0.0931%" height="15" fill="rgb(230,182,32)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.09%)</title><rect x="84.2372%" y="165" width="0.0931%" height="15" fill="rgb(242,56,43)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.09%)</title><rect x="84.2372%" y="149" width="0.0931%" height="15" fill="rgb(233,99,24)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.09%)</title><rect x="84.2372%" y="133" width="0.0931%" height="15" fill="rgb(234,209,42)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="143.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.09%)</title><rect x="84.2372%" y="117" width="0.0931%" height="15" fill="rgb(227,7,12)" fg:x="8139" fg:w="9"/><text x="84.2972%" y="127.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.08%)</title><rect x="84.2476%" y="101" width="0.0828%" height="15" fill="rgb(245,203,43)" fg:x="8140" fg:w="8"/><text x="84.3076%" y="111.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="84.2993%" y="85" width="0.0310%" height="15" fill="rgb(238,205,33)" fg:x="8145" fg:w="3"/><text x="84.3593%" y="95.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="84.4546%" y="85" width="0.0103%" height="15" fill="rgb(231,56,7)" fg:x="8160" fg:w="1"/><text x="84.5146%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.07%)</title><rect x="84.4132%" y="197" width="0.0724%" height="15" fill="rgb(244,186,29)" fg:x="8156" fg:w="7"/><text x="84.4732%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="84.4546%" y="181" width="0.0310%" height="15" fill="rgb(234,111,31)" fg:x="8160" fg:w="3"/><text x="84.5146%" y="191.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.03%)</title><rect x="84.4546%" y="165" width="0.0310%" height="15" fill="rgb(241,149,10)" fg:x="8160" fg:w="3"/><text x="84.5146%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.03%)</title><rect x="84.4546%" y="149" width="0.0310%" height="15" fill="rgb(249,206,44)" fg:x="8160" fg:w="3"/><text x="84.5146%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.03%)</title><rect x="84.4546%" y="133" width="0.0310%" height="15" fill="rgb(251,153,30)" fg:x="8160" fg:w="3"/><text x="84.5146%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="84.4546%" y="117" width="0.0310%" height="15" fill="rgb(239,152,38)" fg:x="8160" fg:w="3"/><text x="84.5146%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="84.4546%" y="101" width="0.0310%" height="15" fill="rgb(249,139,47)" fg:x="8160" fg:w="3"/><text x="84.5146%" y="111.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="84.4649%" y="85" width="0.0207%" height="15" fill="rgb(244,64,35)" fg:x="8161" fg:w="2"/><text x="84.5249%" y="95.50"></text></g><g><title>&lt;u32 as core::fmt::num::DisplayInt&gt;::to_u64 (5 samples, 0.05%)</title><rect x="84.4856%" y="181" width="0.0517%" height="15" fill="rgb(216,46,15)" fg:x="8163" fg:w="5"/><text x="84.5456%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="84.5477%" y="165" width="0.0207%" height="15" fill="rgb(250,74,19)" fg:x="8169" fg:w="2"/><text x="84.6077%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="84.5477%" y="149" width="0.0207%" height="15" fill="rgb(249,42,33)" fg:x="8169" fg:w="2"/><text x="84.6077%" y="159.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="84.5477%" y="133" width="0.0207%" height="15" fill="rgb(242,149,17)" fg:x="8169" fg:w="2"/><text x="84.6077%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="84.5477%" y="117" width="0.0207%" height="15" fill="rgb(244,29,21)" fg:x="8169" fg:w="2"/><text x="84.6077%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="84.5477%" y="101" width="0.0207%" height="15" fill="rgb(220,130,37)" fg:x="8169" fg:w="2"/><text x="84.6077%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="84.5477%" y="85" width="0.0207%" height="15" fill="rgb(211,67,2)" fg:x="8169" fg:w="2"/><text x="84.6077%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="84.5477%" y="69" width="0.0207%" height="15" fill="rgb(235,68,52)" fg:x="8169" fg:w="2"/><text x="84.6077%" y="79.50"></text></g><g><title>alloc::fmt::format (47 samples, 0.49%)</title><rect x="84.1648%" y="245" width="0.4864%" height="15" fill="rgb(246,142,3)" fg:x="8132" fg:w="47"/><text x="84.2248%" y="255.50">a..</text></g><g><title>core::fmt::Write::write_fmt (31 samples, 0.32%)</title><rect x="84.3304%" y="229" width="0.3208%" height="15" fill="rgb(241,25,7)" fg:x="8148" fg:w="31"/><text x="84.3904%" y="239.50"></text></g><g><title>core::fmt::write (31 samples, 0.32%)</title><rect x="84.3304%" y="213" width="0.3208%" height="15" fill="rgb(242,119,39)" fg:x="8148" fg:w="31"/><text x="84.3904%" y="223.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (16 samples, 0.17%)</title><rect x="84.4856%" y="197" width="0.1656%" height="15" fill="rgb(241,98,45)" fg:x="8163" fg:w="16"/><text x="84.5456%" y="207.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (11 samples, 0.11%)</title><rect x="84.5374%" y="181" width="0.1138%" height="15" fill="rgb(254,28,30)" fg:x="8168" fg:w="11"/><text x="84.5974%" y="191.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8 samples, 0.08%)</title><rect x="84.5684%" y="165" width="0.0828%" height="15" fill="rgb(241,142,54)" fg:x="8171" fg:w="8"/><text x="84.6284%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.01%)</title><rect x="84.6409%" y="149" width="0.0103%" height="15" fill="rgb(222,85,15)" fg:x="8178" fg:w="1"/><text x="84.7009%" y="159.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.10%)</title><rect x="84.6719%" y="213" width="0.1035%" height="15" fill="rgb(210,85,47)" fg:x="8181" fg:w="10"/><text x="84.7319%" y="223.50"></text></g><g><title>tcache_get (10 samples, 0.10%)</title><rect x="84.6719%" y="197" width="0.1035%" height="15" fill="rgb(224,206,25)" fg:x="8181" fg:w="10"/><text x="84.7319%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.13%)</title><rect x="84.6512%" y="245" width="0.1345%" height="15" fill="rgb(243,201,19)" fg:x="8179" fg:w="13"/><text x="84.7112%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.11%)</title><rect x="84.6719%" y="229" width="0.1138%" height="15" fill="rgb(236,59,4)" fg:x="8181" fg:w="11"/><text x="84.7319%" y="239.50"></text></g><g><title>rust_oom (1 samples, 0.01%)</title><rect x="84.7754%" y="213" width="0.0103%" height="15" fill="rgb(254,179,45)" fg:x="8191" fg:w="1"/><text x="84.8354%" y="223.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="84.8168%" y="69" width="0.0103%" height="15" fill="rgb(226,14,10)" fg:x="8195" fg:w="1"/><text x="84.8768%" y="79.50"></text></g><g><title>_int_malloc (6 samples, 0.06%)</title><rect x="84.8272%" y="69" width="0.0621%" height="15" fill="rgb(244,27,41)" fg:x="8196" fg:w="6"/><text x="84.8872%" y="79.50"></text></g><g><title>alloc::string::String::with_capacity (11 samples, 0.11%)</title><rect x="84.8168%" y="213" width="0.1138%" height="15" fill="rgb(235,35,32)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.11%)</title><rect x="84.8168%" y="197" width="0.1138%" height="15" fill="rgb(218,68,31)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.11%)</title><rect x="84.8168%" y="181" width="0.1138%" height="15" fill="rgb(207,120,37)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.11%)</title><rect x="84.8168%" y="165" width="0.1138%" height="15" fill="rgb(227,98,0)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.11%)</title><rect x="84.8168%" y="149" width="0.1138%" height="15" fill="rgb(207,7,3)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.11%)</title><rect x="84.8168%" y="133" width="0.1138%" height="15" fill="rgb(206,98,19)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.11%)</title><rect x="84.8168%" y="117" width="0.1138%" height="15" fill="rgb(217,5,26)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="127.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.11%)</title><rect x="84.8168%" y="101" width="0.1138%" height="15" fill="rgb(235,190,38)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="111.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.11%)</title><rect x="84.8168%" y="85" width="0.1138%" height="15" fill="rgb(247,86,24)" fg:x="8195" fg:w="11"/><text x="84.8768%" y="95.50"></text></g><g><title>tcache_get (4 samples, 0.04%)</title><rect x="84.8893%" y="69" width="0.0414%" height="15" fill="rgb(205,101,16)" fg:x="8202" fg:w="4"/><text x="84.9493%" y="79.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (3 samples, 0.03%)</title><rect x="84.9307%" y="213" width="0.0310%" height="15" fill="rgb(246,168,33)" fg:x="8206" fg:w="3"/><text x="84.9907%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="85.0238%" y="181" width="0.0207%" height="15" fill="rgb(231,114,1)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="85.0238%" y="165" width="0.0207%" height="15" fill="rgb(207,184,53)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="175.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="85.0238%" y="149" width="0.0207%" height="15" fill="rgb(224,95,51)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="85.0238%" y="133" width="0.0207%" height="15" fill="rgb(212,188,45)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="85.0238%" y="117" width="0.0207%" height="15" fill="rgb(223,154,38)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="85.0238%" y="101" width="0.0207%" height="15" fill="rgb(251,22,52)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="85.0238%" y="85" width="0.0207%" height="15" fill="rgb(229,209,22)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="85.0238%" y="69" width="0.0207%" height="15" fill="rgb(234,138,34)" fg:x="8215" fg:w="2"/><text x="85.0838%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="85.0652%" y="149" width="0.0310%" height="15" fill="rgb(212,95,11)" fg:x="8219" fg:w="3"/><text x="85.1252%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="85.0756%" y="133" width="0.0207%" height="15" fill="rgb(240,179,47)" fg:x="8220" fg:w="2"/><text x="85.1356%" y="143.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="85.0756%" y="117" width="0.0207%" height="15" fill="rgb(240,163,11)" fg:x="8220" fg:w="2"/><text x="85.1356%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="85.0756%" y="101" width="0.0207%" height="15" fill="rgb(236,37,12)" fg:x="8220" fg:w="2"/><text x="85.1356%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="85.0756%" y="85" width="0.0207%" height="15" fill="rgb(232,164,16)" fg:x="8220" fg:w="2"/><text x="85.1356%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="85.0756%" y="69" width="0.0207%" height="15" fill="rgb(244,205,15)" fg:x="8220" fg:w="2"/><text x="85.1356%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="85.0756%" y="53" width="0.0207%" height="15" fill="rgb(223,117,47)" fg:x="8220" fg:w="2"/><text x="85.1356%" y="63.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="85.0756%" y="37" width="0.0207%" height="15" fill="rgb(244,107,35)" fg:x="8220" fg:w="2"/><text x="85.1356%" y="47.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (34 samples, 0.35%)</title><rect x="84.7858%" y="245" width="0.3519%" height="15" fill="rgb(205,140,8)" fg:x="8192" fg:w="34"/><text x="84.8458%" y="255.50"></text></g><g><title>alloc::fmt::format (31 samples, 0.32%)</title><rect x="84.8168%" y="229" width="0.3208%" height="15" fill="rgb(228,84,46)" fg:x="8195" fg:w="31"/><text x="84.8768%" y="239.50"></text></g><g><title>core::fmt::Write::write_fmt (17 samples, 0.18%)</title><rect x="84.9617%" y="213" width="0.1759%" height="15" fill="rgb(254,188,9)" fg:x="8209" fg:w="17"/><text x="85.0217%" y="223.50"></text></g><g><title>core::fmt::write (17 samples, 0.18%)</title><rect x="84.9617%" y="197" width="0.1759%" height="15" fill="rgb(206,112,54)" fg:x="8209" fg:w="17"/><text x="85.0217%" y="207.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (9 samples, 0.09%)</title><rect x="85.0445%" y="181" width="0.0931%" height="15" fill="rgb(216,84,49)" fg:x="8217" fg:w="9"/><text x="85.1045%" y="191.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (7 samples, 0.07%)</title><rect x="85.0652%" y="165" width="0.0724%" height="15" fill="rgb(214,194,35)" fg:x="8219" fg:w="7"/><text x="85.1252%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral (4 samples, 0.04%)</title><rect x="85.0963%" y="149" width="0.0414%" height="15" fill="rgb(249,28,3)" fg:x="8222" fg:w="4"/><text x="85.1563%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.01%)</title><rect x="85.1273%" y="133" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="8225" fg:w="1"/><text x="85.1873%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (181 samples, 1.87%)</title><rect x="83.2850%" y="261" width="1.8733%" height="15" fill="rgb(245,217,50)" fg:x="8047" fg:w="181"/><text x="83.3450%" y="271.50">&lt;alloc::vec..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="85.1377%" y="245" width="0.0207%" height="15" fill="rgb(213,201,24)" fg:x="8226" fg:w="2"/><text x="85.1977%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="85.4378%" y="245" width="0.0103%" height="15" fill="rgb(248,116,28)" fg:x="8255" fg:w="1"/><text x="85.4978%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (30 samples, 0.31%)</title><rect x="85.1584%" y="261" width="0.3105%" height="15" fill="rgb(219,72,43)" fg:x="8228" fg:w="30"/><text x="85.2184%" y="271.50"></text></g><g><title>&lt;vulkano::pipeline::PipelineBindPoint as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="85.4481%" y="245" width="0.0207%" height="15" fill="rgb(209,138,14)" fg:x="8256" fg:w="2"/><text x="85.5081%" y="255.50"></text></g><g><title>vulkano::command_buffer::synced::builder::SetOrPush::resources (2 samples, 0.02%)</title><rect x="85.4688%" y="261" width="0.0207%" height="15" fill="rgb(222,18,33)" fg:x="8258" fg:w="2"/><text x="85.5288%" y="271.50"></text></g><g><title>vulkano::sync::pipeline::AccessFlags::none (1 samples, 0.01%)</title><rect x="85.4895%" y="261" width="0.0103%" height="15" fill="rgb(213,199,7)" fg:x="8260" fg:w="1"/><text x="85.5495%" y="271.50"></text></g><g><title>vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::add_descriptor_set_resources (269 samples, 2.78%)</title><rect x="82.7261%" y="277" width="2.7841%" height="15" fill="rgb(250,110,10)" fg:x="7993" fg:w="269"/><text x="82.7861%" y="287.50">vulkano::command_..</text></g><g><title>vulkano::sync::pipeline::PipelineStages::none (1 samples, 0.01%)</title><rect x="85.4999%" y="261" width="0.0103%" height="15" fill="rgb(248,123,6)" fg:x="8261" fg:w="1"/><text x="85.5599%" y="271.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="85.8207%" y="197" width="0.0103%" height="15" fill="rgb(206,91,31)" fg:x="8292" fg:w="1"/><text x="85.8807%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.01%)</title><rect x="85.8311%" y="197" width="0.0103%" height="15" fill="rgb(211,154,13)" fg:x="8293" fg:w="1"/><text x="85.8911%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.05%)</title><rect x="85.8414%" y="197" width="0.0517%" height="15" fill="rgb(225,148,7)" fg:x="8294" fg:w="5"/><text x="85.9014%" y="207.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="85.8932%" y="197" width="0.0414%" height="15" fill="rgb(220,160,43)" fg:x="8299" fg:w="4"/><text x="85.9532%" y="207.50"></text></g><g><title>vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::add_index_buffer_resources (51 samples, 0.53%)</title><rect x="85.5102%" y="277" width="0.5278%" height="15" fill="rgb(213,52,39)" fg:x="8262" fg:w="51"/><text x="85.5702%" y="287.50">v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.39%)</title><rect x="85.6448%" y="261" width="0.3933%" height="15" fill="rgb(243,137,7)" fg:x="8275" fg:w="38"/><text x="85.7048%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.39%)</title><rect x="85.6448%" y="245" width="0.3933%" height="15" fill="rgb(230,79,13)" fg:x="8275" fg:w="38"/><text x="85.7048%" y="255.50"></text></g><g><title>__GI___libc_realloc (33 samples, 0.34%)</title><rect x="85.6965%" y="229" width="0.3415%" height="15" fill="rgb(247,105,23)" fg:x="8280" fg:w="33"/><text x="85.7565%" y="239.50"></text></g><g><title>_int_realloc (21 samples, 0.22%)</title><rect x="85.8207%" y="213" width="0.2173%" height="15" fill="rgb(223,179,41)" fg:x="8292" fg:w="21"/><text x="85.8807%" y="223.50"></text></g><g><title>_int_malloc (10 samples, 0.10%)</title><rect x="85.9346%" y="197" width="0.1035%" height="15" fill="rgb(218,9,34)" fg:x="8303" fg:w="10"/><text x="85.9946%" y="207.50"></text></g><g><title>unlink_chunk (2 samples, 0.02%)</title><rect x="86.0174%" y="181" width="0.0207%" height="15" fill="rgb(222,106,8)" fg:x="8311" fg:w="2"/><text x="86.0774%" y="191.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.02%)</title><rect x="86.1933%" y="213" width="0.0207%" height="15" fill="rgb(211,220,0)" fg:x="8328" fg:w="2"/><text x="86.2533%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="86.1933%" y="197" width="0.0207%" height="15" fill="rgb(229,52,16)" fg:x="8328" fg:w="2"/><text x="86.2533%" y="207.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="86.1933%" y="181" width="0.0207%" height="15" fill="rgb(212,155,18)" fg:x="8328" fg:w="2"/><text x="86.2533%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="86.1933%" y="165" width="0.0207%" height="15" fill="rgb(242,21,14)" fg:x="8328" fg:w="2"/><text x="86.2533%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="86.1933%" y="149" width="0.0207%" height="15" fill="rgb(222,19,48)" fg:x="8328" fg:w="2"/><text x="86.2533%" y="159.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="86.1933%" y="133" width="0.0207%" height="15" fill="rgb(232,45,27)" fg:x="8328" fg:w="2"/><text x="86.2533%" y="143.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.02%)</title><rect x="86.1933%" y="117" width="0.0207%" height="15" fill="rgb(249,103,42)" fg:x="8328" fg:w="2"/><text x="86.2533%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="86.2140%" y="85" width="0.0207%" height="15" fill="rgb(246,81,33)" fg:x="8330" fg:w="2"/><text x="86.2740%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="86.2140%" y="69" width="0.0207%" height="15" fill="rgb(252,33,42)" fg:x="8330" fg:w="2"/><text x="86.2740%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="86.2140%" y="181" width="0.0414%" height="15" fill="rgb(209,212,41)" fg:x="8330" fg:w="4"/><text x="86.2740%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="86.2140%" y="165" width="0.0414%" height="15" fill="rgb(207,154,6)" fg:x="8330" fg:w="4"/><text x="86.2740%" y="175.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.04%)</title><rect x="86.2140%" y="149" width="0.0414%" height="15" fill="rgb(223,64,47)" fg:x="8330" fg:w="4"/><text x="86.2740%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.04%)</title><rect x="86.2140%" y="133" width="0.0414%" height="15" fill="rgb(211,161,38)" fg:x="8330" fg:w="4"/><text x="86.2740%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="86.2140%" y="117" width="0.0414%" height="15" fill="rgb(219,138,40)" fg:x="8330" fg:w="4"/><text x="86.2740%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.04%)</title><rect x="86.2140%" y="101" width="0.0414%" height="15" fill="rgb(241,228,46)" fg:x="8330" fg:w="4"/><text x="86.2740%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="86.2347%" y="85" width="0.0207%" height="15" fill="rgb(223,209,38)" fg:x="8332" fg:w="2"/><text x="86.2947%" y="95.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="86.2347%" y="69" width="0.0207%" height="15" fill="rgb(236,164,45)" fg:x="8332" fg:w="2"/><text x="86.2947%" y="79.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.01%)</title><rect x="86.2554%" y="181" width="0.0103%" height="15" fill="rgb(231,15,5)" fg:x="8334" fg:w="1"/><text x="86.3154%" y="191.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="86.2554%" y="165" width="0.0103%" height="15" fill="rgb(252,35,15)" fg:x="8334" fg:w="1"/><text x="86.3154%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="86.2554%" y="149" width="0.0103%" height="15" fill="rgb(248,181,18)" fg:x="8334" fg:w="1"/><text x="86.3154%" y="159.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.08%)</title><rect x="86.1933%" y="229" width="0.0828%" height="15" fill="rgb(233,39,42)" fg:x="8328" fg:w="8"/><text x="86.2533%" y="239.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.06%)</title><rect x="86.2140%" y="213" width="0.0621%" height="15" fill="rgb(238,110,33)" fg:x="8330" fg:w="6"/><text x="86.2740%" y="223.50"></text></g><g><title>core::fmt::write (6 samples, 0.06%)</title><rect x="86.2140%" y="197" width="0.0621%" height="15" fill="rgb(233,195,10)" fg:x="8330" fg:w="6"/><text x="86.2740%" y="207.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.01%)</title><rect x="86.2658%" y="181" width="0.0103%" height="15" fill="rgb(254,105,3)" fg:x="8335" fg:w="1"/><text x="86.3258%" y="191.50"></text></g><g><title>vulkano::command_buffer::synced::builder::commands::&lt;impl vulkano::command_buffer::synced::builder::SyncCommandBufferBuilder&gt;::add_vertex_buffer_resources (28 samples, 0.29%)</title><rect x="86.0381%" y="277" width="0.2898%" height="15" fill="rgb(221,225,9)" fg:x="8313" fg:w="28"/><text x="86.0981%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.29%)</title><rect x="86.0381%" y="261" width="0.2898%" height="15" fill="rgb(224,227,45)" fg:x="8313" fg:w="28"/><text x="86.0981%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.22%)</title><rect x="86.1105%" y="245" width="0.2173%" height="15" fill="rgb(229,198,43)" fg:x="8320" fg:w="21"/><text x="86.1705%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.05%)</title><rect x="86.2761%" y="229" width="0.0517%" height="15" fill="rgb(206,209,35)" fg:x="8336" fg:w="5"/><text x="86.3361%" y="239.50"></text></g><g><title>vulkano::command_buffer::validity::blit_image::check_blit_image (1 samples, 0.01%)</title><rect x="86.3279%" y="277" width="0.0103%" height="15" fill="rgb(245,195,53)" fg:x="8341" fg:w="1"/><text x="86.3879%" y="287.50"></text></g><g><title>&lt;vulkano::descriptor_set::persistent::PersistentDescriptorSet&lt;P&gt; as vulkano::descriptor_set::DescriptorSet&gt;::resources (1 samples, 0.01%)</title><rect x="86.9385%" y="261" width="0.0103%" height="15" fill="rgb(240,92,26)" fg:x="8400" fg:w="1"/><text x="86.9985%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.18%)</title><rect x="86.9489%" y="261" width="0.1759%" height="15" fill="rgb(207,40,23)" fg:x="8401" fg:w="17"/><text x="87.0089%" y="271.50"></text></g><g><title>&lt;vulkano::pipeline::PipelineBindPoint as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="87.0731%" y="245" width="0.0517%" height="15" fill="rgb(223,111,35)" fg:x="8413" fg:w="5"/><text x="87.1331%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="87.5492%" y="229" width="0.0103%" height="15" fill="rgb(229,147,28)" fg:x="8459" fg:w="1"/><text x="87.6092%" y="239.50"></text></g><g><title>vulkano::command_buffer::synced::builder::CommandBufferState::descriptor_set (43 samples, 0.45%)</title><rect x="87.1248%" y="261" width="0.4450%" height="15" fill="rgb(211,29,28)" fg:x="8418" fg:w="43"/><text x="87.1848%" y="271.50">v..</text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.30%)</title><rect x="87.2697%" y="245" width="0.3001%" height="15" fill="rgb(228,72,33)" fg:x="8432" fg:w="29"/><text x="87.3297%" y="255.50"></text></g><g><title>&lt;vulkano::pipeline::PipelineBindPoint as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="87.5595%" y="229" width="0.0103%" height="15" fill="rgb(205,214,31)" fg:x="8460" fg:w="1"/><text x="87.6195%" y="239.50"></text></g><g><title>vulkano::command_buffer::synced::builder::SetOrPush::resources (1 samples, 0.01%)</title><rect x="87.5699%" y="261" width="0.0103%" height="15" fill="rgb(224,111,15)" fg:x="8461" fg:w="1"/><text x="87.6299%" y="271.50"></text></g><g><title>&lt;vulkano::image::view::ImageView&lt;I&gt; as vulkano::image::view::ImageViewAbstract&gt;::aspects (1 samples, 0.01%)</title><rect x="87.6941%" y="245" width="0.0103%" height="15" fill="rgb(253,21,26)" fg:x="8473" fg:w="1"/><text x="87.7541%" y="255.50"></text></g><g><title>&lt;vulkano::image::view::ImageView&lt;I&gt; as vulkano::image::view::ImageViewAbstract&gt;::image (2 samples, 0.02%)</title><rect x="87.7044%" y="245" width="0.0207%" height="15" fill="rgb(245,139,43)" fg:x="8474" fg:w="2"/><text x="87.7644%" y="255.50"></text></g><g><title>&lt;vulkano::image::view::ImageView&lt;I&gt; as vulkano::image::view::ImageViewAbstract&gt;::view_type (1 samples, 0.01%)</title><rect x="87.7251%" y="245" width="0.0103%" height="15" fill="rgb(252,170,7)" fg:x="8476" fg:w="1"/><text x="87.7851%" y="255.50"></text></g><g><title>vulkano::command_buffer::validity::descriptor_sets::check_descriptor_sets_validity (137 samples, 1.42%)</title><rect x="86.3382%" y="277" width="1.4179%" height="15" fill="rgb(231,118,14)" fg:x="8342" fg:w="137"/><text x="86.3982%" y="287.50">vulkano:..</text></g><g><title>vulkano::command_buffer::validity::descriptor_sets::check_descriptor_sets_validity::{{closure}} (17 samples, 0.18%)</title><rect x="87.5802%" y="261" width="0.1759%" height="15" fill="rgb(238,83,0)" fg:x="8462" fg:w="17"/><text x="87.6402%" y="271.50"></text></g><g><title>vulkano::format::Format::type_color (2 samples, 0.02%)</title><rect x="87.7355%" y="245" width="0.0207%" height="15" fill="rgb(221,39,39)" fg:x="8477" fg:w="2"/><text x="87.7955%" y="255.50"></text></g><g><title>vulkano::command_buffer::validity::dynamic_state::check_dynamic_state_validity (26 samples, 0.27%)</title><rect x="87.7562%" y="277" width="0.2691%" height="15" fill="rgb(222,119,46)" fg:x="8479" fg:w="26"/><text x="87.8162%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.12%)</title><rect x="87.9011%" y="261" width="0.1242%" height="15" fill="rgb(222,165,49)" fg:x="8493" fg:w="12"/><text x="87.9611%" y="271.50"></text></g><g><title>vulkano::command_buffer::validity::index_buffer::check_index_buffer (2 samples, 0.02%)</title><rect x="88.0253%" y="277" width="0.0207%" height="15" fill="rgb(219,113,52)" fg:x="8505" fg:w="2"/><text x="88.0853%" y="287.50"></text></g><g><title>vulkano::command_buffer::validity::pipeline::check_pipeline_graphics (1 samples, 0.01%)</title><rect x="88.0460%" y="277" width="0.0103%" height="15" fill="rgb(214,7,15)" fg:x="8507" fg:w="1"/><text x="88.1060%" y="287.50"></text></g><g><title>vulkano::command_buffer::validity::push_constants::check_push_constants_validity (1 samples, 0.01%)</title><rect x="88.0563%" y="277" width="0.0103%" height="15" fill="rgb(235,32,4)" fg:x="8508" fg:w="1"/><text x="88.1163%" y="287.50"></text></g><g><title>vulkano::command_buffer::validity::vertex_buffers::check_vertex_buffers (11 samples, 0.11%)</title><rect x="88.0667%" y="277" width="0.1138%" height="15" fill="rgb(238,90,54)" fg:x="8509" fg:w="11"/><text x="88.1267%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.04%)</title><rect x="88.1391%" y="261" width="0.0414%" height="15" fill="rgb(213,208,19)" fg:x="8516" fg:w="4"/><text x="88.1991%" y="271.50"></text></g><g><title>Unknown (1 samples, 0.01%)</title><rect x="88.2633%" y="261" width="0.0103%" height="15" fill="rgb(233,156,4)" fg:x="8528" fg:w="1"/><text x="88.3233%" y="271.50"></text></g><g><title>__GI___libc_malloc (257 samples, 2.66%)</title><rect x="88.2736%" y="261" width="2.6599%" height="15" fill="rgb(207,194,5)" fg:x="8529" fg:w="257"/><text x="88.3336%" y="271.50">__GI___libc_mall..</text></g><g><title>_int_malloc (22 samples, 0.23%)</title><rect x="90.7059%" y="245" width="0.2277%" height="15" fill="rgb(206,111,30)" fg:x="8764" fg:w="22"/><text x="90.7659%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="90.9336%" y="261" width="0.0207%" height="15" fill="rgb(243,70,54)" fg:x="8786" fg:w="2"/><text x="90.9936%" y="271.50"></text></g><g><title>rust_oom (1 samples, 0.01%)</title><rect x="90.9543%" y="261" width="0.0103%" height="15" fill="rgb(242,28,8)" fg:x="8788" fg:w="1"/><text x="91.0143%" y="271.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.14%)</title><rect x="91.8961%" y="245" width="0.1449%" height="15" fill="rgb(219,106,18)" fg:x="8879" fg:w="14"/><text x="91.9561%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="92.0410%" y="245" width="0.0414%" height="15" fill="rgb(244,222,10)" fg:x="8893" fg:w="4"/><text x="92.1010%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="92.3308%" y="197" width="0.0517%" height="15" fill="rgb(236,179,52)" fg:x="8921" fg:w="5"/><text x="92.3908%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.23%)</title><rect x="92.4757%" y="181" width="0.2277%" height="15" fill="rgb(213,23,39)" fg:x="8935" fg:w="22"/><text x="92.5357%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="92.6723%" y="165" width="0.0310%" height="15" fill="rgb(238,48,10)" fg:x="8954" fg:w="3"/><text x="92.7323%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (45 samples, 0.47%)</title><rect x="92.3825%" y="197" width="0.4657%" height="15" fill="rgb(251,196,23)" fg:x="8926" fg:w="45"/><text x="92.4425%" y="207.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.14%)</title><rect x="92.7034%" y="181" width="0.1449%" height="15" fill="rgb(250,152,24)" fg:x="8957" fg:w="14"/><text x="92.7634%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.73%)</title><rect x="92.1341%" y="213" width="0.7348%" height="15" fill="rgb(209,150,17)" fg:x="8902" fg:w="71"/><text x="92.1941%" y="223.50">&lt;co..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (2 samples, 0.02%)</title><rect x="92.8483%" y="197" width="0.0207%" height="15" fill="rgb(234,202,34)" fg:x="8971" fg:w="2"/><text x="92.9083%" y="207.50"></text></g><g><title>Unknown (4 samples, 0.04%)</title><rect x="92.9621%" y="197" width="0.0414%" height="15" fill="rgb(253,148,53)" fg:x="8982" fg:w="4"/><text x="93.0221%" y="207.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.10%)</title><rect x="93.0035%" y="197" width="0.1035%" height="15" fill="rgb(218,129,16)" fg:x="8986" fg:w="10"/><text x="93.0635%" y="207.50"></text></g><g><title>_int_malloc (10 samples, 0.10%)</title><rect x="93.0035%" y="181" width="0.1035%" height="15" fill="rgb(216,85,19)" fg:x="8986" fg:w="10"/><text x="93.0635%" y="191.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="93.0967%" y="165" width="0.0103%" height="15" fill="rgb(235,228,7)" fg:x="8995" fg:w="1"/><text x="93.1567%" y="175.50"></text></g><g><title>vulkano::descriptor_set::DescriptorSetResources::new (100 samples, 1.03%)</title><rect x="92.0824%" y="245" width="1.0350%" height="15" fill="rgb(245,175,0)" fg:x="8897" fg:w="100"/><text x="92.1424%" y="255.50">vulka..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (99 samples, 1.02%)</title><rect x="92.0927%" y="229" width="1.0246%" height="15" fill="rgb(208,168,36)" fg:x="8898" fg:w="99"/><text x="92.1527%" y="239.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.25%)</title><rect x="92.8690%" y="213" width="0.2484%" height="15" fill="rgb(246,171,24)" fg:x="8973" fg:w="24"/><text x="92.9290%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="93.1070%" y="197" width="0.0103%" height="15" fill="rgb(215,142,24)" fg:x="8996" fg:w="1"/><text x="93.1670%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="93.1070%" y="181" width="0.0103%" height="15" fill="rgb(250,187,7)" fg:x="8996" fg:w="1"/><text x="93.1670%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.08%)</title><rect x="93.1898%" y="229" width="0.0828%" height="15" fill="rgb(228,66,33)" fg:x="9004" fg:w="8"/><text x="93.2498%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="93.2623%" y="213" width="0.0103%" height="15" fill="rgb(234,215,21)" fg:x="9011" fg:w="1"/><text x="93.3223%" y="223.50"></text></g><g><title>vulkano::descriptor_set::DescriptorBindingResources::update (11 samples, 0.11%)</title><rect x="93.2726%" y="229" width="0.1138%" height="15" fill="rgb(222,191,20)" fg:x="9012" fg:w="11"/><text x="93.3326%" y="239.50"></text></g><g><title>vulkano::descriptor_set::DescriptorSetResources::update (28 samples, 0.29%)</title><rect x="93.1174%" y="245" width="0.2898%" height="15" fill="rgb(245,79,54)" fg:x="8997" fg:w="28"/><text x="93.1774%" y="255.50"></text></g><g><title>vulkano::descriptor_set::DescriptorSetResources::update (2 samples, 0.02%)</title><rect x="93.3865%" y="229" width="0.0207%" height="15" fill="rgb(240,10,37)" fg:x="9023" fg:w="2"/><text x="93.4465%" y="239.50"></text></g><g><title>vulkano::descriptor_set::update::WriteDescriptorSet::to_vulkan (2 samples, 0.02%)</title><rect x="93.4072%" y="245" width="0.0207%" height="15" fill="rgb(214,192,32)" fg:x="9025" fg:w="2"/><text x="93.4672%" y="255.50"></text></g><g><title>&lt;ash::vk::definitions::WriteDescriptorSet as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="93.4175%" y="229" width="0.0103%" height="15" fill="rgb(209,36,54)" fg:x="9026" fg:w="1"/><text x="93.4775%" y="239.50"></text></g><g><title>&lt;T as vulkano::buffer::traits::BufferAccess&gt;::size (4 samples, 0.04%)</title><rect x="93.6038%" y="213" width="0.0414%" height="15" fill="rgb(220,10,11)" fg:x="9044" fg:w="4"/><text x="93.6638%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="93.6452%" y="213" width="0.0207%" height="15" fill="rgb(221,106,17)" fg:x="9048" fg:w="2"/><text x="93.7052%" y="223.50"></text></g><g><title>vulkano::descriptor_set::update::WriteDescriptorSet::to_vulkan_info (26 samples, 0.27%)</title><rect x="93.4279%" y="245" width="0.2691%" height="15" fill="rgb(251,142,44)" fg:x="9027" fg:w="26"/><text x="93.4879%" y="255.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (18 samples, 0.19%)</title><rect x="93.5107%" y="229" width="0.1863%" height="15" fill="rgb(238,13,15)" fg:x="9035" fg:w="18"/><text x="93.5707%" y="239.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (3 samples, 0.03%)</title><rect x="93.6659%" y="213" width="0.0310%" height="15" fill="rgb(208,107,27)" fg:x="9050" fg:w="3"/><text x="93.7259%" y="223.50"></text></g><g><title>&lt;T as vulkano::device::DeviceOwned&gt;::device (5 samples, 0.05%)</title><rect x="93.9661%" y="229" width="0.0517%" height="15" fill="rgb(205,136,37)" fg:x="9079" fg:w="5"/><text x="94.0261%" y="239.50"></text></g><g><title>&lt;vulkano::image::view::ImageView&lt;I&gt; as vulkano::device::DeviceOwned&gt;::device (2 samples, 0.02%)</title><rect x="94.0178%" y="229" width="0.0207%" height="15" fill="rgb(250,205,27)" fg:x="9084" fg:w="2"/><text x="94.0778%" y="239.50"></text></g><g><title>&lt;vulkano::image::view::ImageView&lt;I&gt; as vulkano::image::view::ImageViewAbstract&gt;::image (1 samples, 0.01%)</title><rect x="94.0385%" y="229" width="0.0103%" height="15" fill="rgb(210,80,43)" fg:x="9086" fg:w="1"/><text x="94.0985%" y="239.50"></text></g><g><title>vulkano::descriptor_set::DescriptorSetInner::new (299 samples, 3.09%)</title><rect x="90.9646%" y="261" width="3.0946%" height="15" fill="rgb(247,160,36)" fg:x="8789" fg:w="299"/><text x="91.0246%" y="271.50">vulkano::descriptor..</text></g><g><title>vulkano::descriptor_set::update::check_descriptor_write (35 samples, 0.36%)</title><rect x="93.6970%" y="245" width="0.3622%" height="15" fill="rgb(234,13,49)" fg:x="9053" fg:w="35"/><text x="93.7570%" y="255.50"></text></g><g><title>&lt;vulkano::image::view::ImageView&lt;I&gt; as vulkano::image::view::ImageViewAbstract&gt;::usage (1 samples, 0.01%)</title><rect x="94.0489%" y="229" width="0.0103%" height="15" fill="rgb(234,122,0)" fg:x="9087" fg:w="1"/><text x="94.1089%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="94.5974%" y="245" width="0.0103%" height="15" fill="rgb(207,146,38)" fg:x="9140" fg:w="1"/><text x="94.6574%" y="255.50"></text></g><g><title>new_heap (2 samples, 0.02%)</title><rect x="94.8044%" y="197" width="0.0207%" height="15" fill="rgb(207,177,25)" fg:x="9160" fg:w="2"/><text x="94.8644%" y="207.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.13%)</title><rect x="94.7009%" y="229" width="0.1345%" height="15" fill="rgb(211,178,42)" fg:x="9150" fg:w="13"/><text x="94.7609%" y="239.50"></text></g><g><title>_int_malloc (10 samples, 0.10%)</title><rect x="94.7319%" y="213" width="0.1035%" height="15" fill="rgb(230,69,54)" fg:x="9153" fg:w="10"/><text x="94.7919%" y="223.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="94.8251%" y="197" width="0.0103%" height="15" fill="rgb(214,135,41)" fg:x="9162" fg:w="1"/><text x="94.8851%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.27%)</title><rect x="94.6077%" y="245" width="0.2691%" height="15" fill="rgb(237,67,25)" fg:x="9141" fg:w="26"/><text x="94.6677%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="94.8354%" y="229" width="0.0414%" height="15" fill="rgb(222,189,50)" fg:x="9163" fg:w="4"/><text x="94.8954%" y="239.50"></text></g><g><title>Unknown (32 samples, 0.33%)</title><rect x="94.8768%" y="245" width="0.3312%" height="15" fill="rgb(245,148,34)" fg:x="9167" fg:w="32"/><text x="94.9368%" y="255.50"></text></g><g><title>__GI___pthread_mutex_lock (125 samples, 1.29%)</title><rect x="95.2080%" y="245" width="1.2937%" height="15" fill="rgb(222,29,6)" fg:x="9199" fg:w="125"/><text x="95.2680%" y="255.50">__GI___..</text></g><g><title>__GI___pthread_mutex_unlock (12 samples, 0.12%)</title><rect x="96.5018%" y="245" width="0.1242%" height="15" fill="rgb(221,189,43)" fg:x="9324" fg:w="12"/><text x="96.5618%" y="255.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (169 samples, 1.75%)</title><rect x="96.6260%" y="245" width="1.7491%" height="15" fill="rgb(207,36,27)" fg:x="9336" fg:w="169"/><text x="96.6860%" y="255.50">__pthread_..</text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="98.3751%" y="245" width="0.0207%" height="15" fill="rgb(217,90,24)" fg:x="9505" fg:w="2"/><text x="98.4351%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.24%)</title><rect x="98.3958%" y="245" width="0.2380%" height="15" fill="rgb(224,66,35)" fg:x="9507" fg:w="23"/><text x="98.4558%" y="255.50"></text></g><g><title>&lt;vulkano::descriptor_set::layout::DescriptorType as core::hash::Hash&gt;::hash (9 samples, 0.09%)</title><rect x="98.5407%" y="229" width="0.0931%" height="15" fill="rgb(221,13,50)" fg:x="9521" fg:w="9"/><text x="98.6007%" y="239.50"></text></g><g><title>&lt;ash::vk::definitions::DescriptorPoolCreateInfo as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="98.8926%" y="229" width="0.0207%" height="15" fill="rgb(236,68,49)" fg:x="9555" fg:w="2"/><text x="98.9526%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.13%)</title><rect x="98.9133%" y="229" width="0.1345%" height="15" fill="rgb(229,146,28)" fg:x="9557" fg:w="13"/><text x="98.9733%" y="239.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (6 samples, 0.06%)</title><rect x="98.9857%" y="213" width="0.0621%" height="15" fill="rgb(225,31,38)" fg:x="9564" fg:w="6"/><text x="99.0457%" y="223.50"></text></g><g><title>Unknown (6 samples, 0.06%)</title><rect x="99.0478%" y="229" width="0.0621%" height="15" fill="rgb(250,208,3)" fg:x="9570" fg:w="6"/><text x="99.1078%" y="239.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.21%)</title><rect x="99.1099%" y="229" width="0.2070%" height="15" fill="rgb(246,54,23)" fg:x="9576" fg:w="20"/><text x="99.1699%" y="239.50"></text></g><g><title>_int_malloc (17 samples, 0.18%)</title><rect x="99.1410%" y="213" width="0.1759%" height="15" fill="rgb(243,76,11)" fg:x="9579" fg:w="17"/><text x="99.2010%" y="223.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.02%)</title><rect x="99.3169%" y="229" width="0.0207%" height="15" fill="rgb(245,21,50)" fg:x="9596" fg:w="2"/><text x="99.3769%" y="239.50"></text></g><g><title>vulkano::descriptor_set::pool::sys::UnsafeDescriptorPool::allocate_descriptor_sets (70 samples, 0.72%)</title><rect x="98.6338%" y="245" width="0.7245%" height="15" fill="rgb(228,9,43)" fg:x="9530" fg:w="70"/><text x="98.6938%" y="255.50">vul..</text></g><g><title>ash::vk::features::DeviceFnV1_0::allocate_descriptor_sets (2 samples, 0.02%)</title><rect x="99.3376%" y="229" width="0.0207%" height="15" fill="rgb(208,100,47)" fg:x="9598" fg:w="2"/><text x="99.3976%" y="239.50"></text></g><g><title>amdgpu_bo_alloc (6 samples, 0.06%)</title><rect x="99.3583%" y="229" width="0.0621%" height="15" fill="rgb(232,26,8)" fg:x="9600" fg:w="6"/><text x="99.4183%" y="239.50"></text></g><g><title>drmCommandWriteRead (6 samples, 0.06%)</title><rect x="99.3583%" y="213" width="0.0621%" height="15" fill="rgb(216,166,38)" fg:x="9600" fg:w="6"/><text x="99.4183%" y="223.50"></text></g><g><title>drmIoctl (6 samples, 0.06%)</title><rect x="99.3583%" y="197" width="0.0621%" height="15" fill="rgb(251,202,51)" fg:x="9600" fg:w="6"/><text x="99.4183%" y="207.50"></text></g><g><title>__ioctl (6 samples, 0.06%)</title><rect x="99.3583%" y="181" width="0.0621%" height="15" fill="rgb(254,216,34)" fg:x="9600" fg:w="6"/><text x="99.4183%" y="191.50"></text></g><g><title>amdgpu_bo_cpu_map (4 samples, 0.04%)</title><rect x="99.4204%" y="229" width="0.0414%" height="15" fill="rgb(251,32,27)" fg:x="9606" fg:w="4"/><text x="99.4804%" y="239.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.04%)</title><rect x="99.4204%" y="213" width="0.0414%" height="15" fill="rgb(208,127,28)" fg:x="9606" fg:w="4"/><text x="99.4804%" y="223.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.04%)</title><rect x="99.4204%" y="197" width="0.0414%" height="15" fill="rgb(224,137,22)" fg:x="9606" fg:w="4"/><text x="99.4804%" y="207.50"></text></g><g><title>vulkano::descriptor_set::persistent::PersistentDescriptorSet::new_with_pool (1,097 samples, 11.35%)</title><rect x="88.1805%" y="277" width="11.3538%" height="15" fill="rgb(254,70,32)" fg:x="8520" fg:w="1097"/><text x="88.2405%" y="287.50">vulkano::descriptor_set::persistent::PersistentDescriptorSet::new_with_pool</text></g><g><title>vulkano::descriptor_set::pool::standard::&lt;impl vulkano::descriptor_set::pool::DescriptorPool for alloc::sync::Arc&lt;vulkano::descriptor_set::pool::standard::StdDescriptorPool&gt;&gt;::allocate (529 samples, 5.48%)</title><rect x="94.0592%" y="261" width="5.4751%" height="15" fill="rgb(229,75,37)" fg:x="9088" fg:w="529"/><text x="94.1192%" y="271.50">vulkano::descriptor_set::pool::stand..</text></g><g><title>vulkano::descriptor_set::pool::sys::UnsafeDescriptorPool::new (17 samples, 0.18%)</title><rect x="99.3583%" y="245" width="0.1759%" height="15" fill="rgb(252,64,23)" fg:x="9600" fg:w="17"/><text x="99.4183%" y="255.50"></text></g><g><title>amdgpu_bo_va_op_raw (7 samples, 0.07%)</title><rect x="99.4618%" y="229" width="0.0724%" height="15" fill="rgb(232,162,48)" fg:x="9610" fg:w="7"/><text x="99.5218%" y="239.50"></text></g><g><title>drmCommandWriteRead (7 samples, 0.07%)</title><rect x="99.4618%" y="213" width="0.0724%" height="15" fill="rgb(246,160,12)" fg:x="9610" fg:w="7"/><text x="99.5218%" y="223.50"></text></g><g><title>drmIoctl (7 samples, 0.07%)</title><rect x="99.4618%" y="197" width="0.0724%" height="15" fill="rgb(247,166,0)" fg:x="9610" fg:w="7"/><text x="99.5218%" y="207.50"></text></g><g><title>__ioctl (7 samples, 0.07%)</title><rect x="99.4618%" y="181" width="0.0724%" height="15" fill="rgb(249,219,21)" fg:x="9610" fg:w="7"/><text x="99.5218%" y="191.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="99.6171%" y="261" width="0.0103%" height="15" fill="rgb(205,209,3)" fg:x="9625" fg:w="1"/><text x="99.6771%" y="271.50"></text></g><g><title>vulkano::device::Device::standard_descriptor_pool (12 samples, 0.12%)</title><rect x="99.5343%" y="277" width="0.1242%" height="15" fill="rgb(243,44,1)" fg:x="9617" fg:w="12"/><text x="99.5943%" y="287.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.03%)</title><rect x="99.6274%" y="261" width="0.0310%" height="15" fill="rgb(206,159,16)" fg:x="9626" fg:w="3"/><text x="99.6874%" y="271.50"></text></g><g><title>vulkano::render_pass::RenderPass::is_compatible_with (5 samples, 0.05%)</title><rect x="99.6585%" y="277" width="0.0517%" height="15" fill="rgb(244,77,30)" fg:x="9629" fg:w="5"/><text x="99.7185%" y="287.50"></text></g><g><title>vulkano::swapchain::swapchain::acquire_next_image (2 samples, 0.02%)</title><rect x="99.7102%" y="277" width="0.0207%" height="15" fill="rgb(218,69,12)" fg:x="9634" fg:w="2"/><text x="99.7702%" y="287.50"></text></g><g><title>vulkano::sync::fence::Fence::from_pool (1 samples, 0.01%)</title><rect x="99.7206%" y="261" width="0.0103%" height="15" fill="rgb(212,87,7)" fg:x="9635" fg:w="1"/><text x="99.7806%" y="271.50"></text></g><g><title>drmSyncobjReset (1 samples, 0.01%)</title><rect x="99.7206%" y="245" width="0.0103%" height="15" fill="rgb(245,114,25)" fg:x="9635" fg:w="1"/><text x="99.7806%" y="255.50"></text></g><g><title>drmIoctl (1 samples, 0.01%)</title><rect x="99.7206%" y="229" width="0.0103%" height="15" fill="rgb(210,61,42)" fg:x="9635" fg:w="1"/><text x="99.7806%" y="239.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="99.7206%" y="213" width="0.0103%" height="15" fill="rgb(211,52,33)" fg:x="9635" fg:w="1"/><text x="99.7806%" y="223.50"></text></g><g><title>&lt;vulkano::command_buffer::traits::CommandBufferExecFuture&lt;F,Cb&gt; as vulkano::sync::future::GpuFuture&gt;::flush (18 samples, 0.19%)</title><rect x="99.7309%" y="261" width="0.1863%" height="15" fill="rgb(234,58,33)" fg:x="9636" fg:w="18"/><text x="99.7909%" y="271.50"></text></g><g><title>vulkano::command_buffer::submit::queue_submit::SubmitCommandBufferBuilder::submit (18 samples, 0.19%)</title><rect x="99.7309%" y="245" width="0.1863%" height="15" fill="rgb(220,115,36)" fg:x="9636" fg:w="18"/><text x="99.7909%" y="255.50"></text></g><g><title>amdgpu_cs_submit_raw2 (16 samples, 0.17%)</title><rect x="99.7516%" y="229" width="0.1656%" height="15" fill="rgb(243,153,54)" fg:x="9638" fg:w="16"/><text x="99.8116%" y="239.50"></text></g><g><title>drmCommandWriteRead (16 samples, 0.17%)</title><rect x="99.7516%" y="213" width="0.1656%" height="15" fill="rgb(251,47,18)" fg:x="9638" fg:w="16"/><text x="99.8116%" y="223.50"></text></g><g><title>drmIoctl (16 samples, 0.17%)</title><rect x="99.7516%" y="197" width="0.1656%" height="15" fill="rgb(242,102,42)" fg:x="9638" fg:w="16"/><text x="99.8116%" y="207.50"></text></g><g><title>__ioctl (16 samples, 0.17%)</title><rect x="99.7516%" y="181" width="0.1656%" height="15" fill="rgb(234,31,38)" fg:x="9638" fg:w="16"/><text x="99.8116%" y="191.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="99.9379%" y="245" width="0.0103%" height="15" fill="rgb(221,117,51)" fg:x="9656" fg:w="1"/><text x="99.9979%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="99.9379%" y="229" width="0.0103%" height="15" fill="rgb(212,20,18)" fg:x="9656" fg:w="1"/><text x="99.9979%" y="239.50"></text></g><g><title>alloc_perturb (1 samples, 0.01%)</title><rect x="99.9379%" y="213" width="0.0103%" height="15" fill="rgb(245,133,36)" fg:x="9656" fg:w="1"/><text x="99.9979%" y="223.50"></text></g><g><title>wl_display_dispatch_queue (1 samples, 0.01%)</title><rect x="99.9483%" y="245" width="0.0103%" height="15" fill="rgb(212,6,19)" fg:x="9657" fg:w="1"/><text x="100.0083%" y="255.50"></text></g><g><title>wl_display_read_events (1 samples, 0.01%)</title><rect x="99.9483%" y="229" width="0.0103%" height="15" fill="rgb(218,1,36)" fg:x="9657" fg:w="1"/><text x="100.0083%" y="239.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="99.9483%" y="213" width="0.0103%" height="15" fill="rgb(246,84,54)" fg:x="9657" fg:w="1"/><text x="100.0083%" y="223.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="99.9483%" y="197" width="0.0103%" height="15" fill="rgb(242,110,6)" fg:x="9657" fg:w="1"/><text x="100.0083%" y="207.50"></text></g><g><title>wl_display_dispatch_queue_pending (1 samples, 0.01%)</title><rect x="99.9586%" y="245" width="0.0103%" height="15" fill="rgb(214,47,5)" fg:x="9658" fg:w="1"/><text x="100.0186%" y="255.50"></text></g><g><title>ffi_prep_cif (1 samples, 0.01%)</title><rect x="99.9586%" y="229" width="0.0103%" height="15" fill="rgb(218,159,25)" fg:x="9658" fg:w="1"/><text x="100.0186%" y="239.50"></text></g><g><title>foxterm::renderer::Renderer::init::{{closure}} (9,649 samples, 99.87%)</title><rect x="0.1138%" y="293" width="99.8655%" height="15" fill="rgb(215,211,28)" fg:x="11" fg:w="9649"/><text x="0.1738%" y="303.50">foxterm::renderer::Renderer::init::{{closure}}</text></g><g><title>vulkano::sync::future::fence_signal::FenceSignalFuture&lt;F&gt;::flush_impl (24 samples, 0.25%)</title><rect x="99.7309%" y="277" width="0.2484%" height="15" fill="rgb(238,59,32)" fg:x="9636" fg:w="24"/><text x="99.7909%" y="287.50"></text></g><g><title>vulkano::command_buffer::submit::queue_present::SubmitPresentBuilder::submit (6 samples, 0.06%)</title><rect x="99.9172%" y="261" width="0.0621%" height="15" fill="rgb(226,82,3)" fg:x="9654" fg:w="6"/><text x="99.9772%" y="271.50"></text></g><g><title>wl_proxy_marshal_flags (1 samples, 0.01%)</title><rect x="99.9690%" y="245" width="0.0103%" height="15" fill="rgb(240,164,32)" fg:x="9659" fg:w="1"/><text x="100.0290%" y="255.50"></text></g><g><title>wl_proxy_marshal_array_flags (1 samples, 0.01%)</title><rect x="99.9690%" y="229" width="0.0103%" height="15" fill="rgb(232,46,7)" fg:x="9659" fg:w="1"/><text x="100.0290%" y="239.50"></text></g><g><title>__libc_calloc (1 samples, 0.01%)</title><rect x="99.9690%" y="213" width="0.0103%" height="15" fill="rgb(229,129,53)" fg:x="9659" fg:w="1"/><text x="100.0290%" y="223.50"></text></g><g><title>wayland_client::imp::display::DisplayInner::ptr (1 samples, 0.01%)</title><rect x="99.9793%" y="277" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="9660" fg:w="1"/><text x="100.0393%" y="287.50"></text></g><g><title>all (9,662 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(246,141,4)" fg:x="0" fg:w="9662"/><text x="0.0600%" y="639.50"></text></g><g><title>foxterm (9,662 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(229,23,39)" fg:x="0" fg:w="9662"/><text x="0.0600%" y="623.50">foxterm</text></g><g><title>_start (9,652 samples, 99.90%)</title><rect x="0.1035%" y="597" width="99.8965%" height="15" fill="rgb(206,12,3)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="607.50">_start</text></g><g><title>__libc_start_main (9,652 samples, 99.90%)</title><rect x="0.1035%" y="581" width="99.8965%" height="15" fill="rgb(252,226,20)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="591.50">__libc_start_main</text></g><g><title>main (9,652 samples, 99.90%)</title><rect x="0.1035%" y="565" width="99.8965%" height="15" fill="rgb(216,123,35)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="575.50">main</text></g><g><title>std::rt::lang_start_internal (9,652 samples, 99.90%)</title><rect x="0.1035%" y="549" width="99.8965%" height="15" fill="rgb(212,68,40)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="559.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (9,652 samples, 99.90%)</title><rect x="0.1035%" y="533" width="99.8965%" height="15" fill="rgb(254,125,32)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="543.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,652 samples, 99.90%)</title><rect x="0.1035%" y="517" width="99.8965%" height="15" fill="rgb(253,97,22)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="527.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,652 samples, 99.90%)</title><rect x="0.1035%" y="501" width="99.8965%" height="15" fill="rgb(241,101,14)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="511.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (9,652 samples, 99.90%)</title><rect x="0.1035%" y="485" width="99.8965%" height="15" fill="rgb(238,103,29)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="495.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (9,652 samples, 99.90%)</title><rect x="0.1035%" y="469" width="99.8965%" height="15" fill="rgb(233,195,47)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="479.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,652 samples, 99.90%)</title><rect x="0.1035%" y="453" width="99.8965%" height="15" fill="rgb(246,218,30)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="463.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,652 samples, 99.90%)</title><rect x="0.1035%" y="437" width="99.8965%" height="15" fill="rgb(219,145,47)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="447.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9,652 samples, 99.90%)</title><rect x="0.1035%" y="421" width="99.8965%" height="15" fill="rgb(243,12,26)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="431.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (9,652 samples, 99.90%)</title><rect x="0.1035%" y="405" width="99.8965%" height="15" fill="rgb(214,87,16)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="415.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,652 samples, 99.90%)</title><rect x="0.1035%" y="389" width="99.8965%" height="15" fill="rgb(208,99,42)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="399.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>foxterm::main (9,652 samples, 99.90%)</title><rect x="0.1035%" y="373" width="99.8965%" height="15" fill="rgb(253,99,2)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="383.50">foxterm::main</text></g><g><title>foxterm::renderer::Renderer::init (9,652 samples, 99.90%)</title><rect x="0.1035%" y="357" width="99.8965%" height="15" fill="rgb(220,168,23)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="367.50">foxterm::renderer::Renderer::init</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (9,652 samples, 99.90%)</title><rect x="0.1035%" y="341" width="99.8965%" height="15" fill="rgb(242,38,24)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="351.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (9,652 samples, 99.90%)</title><rect x="0.1035%" y="325" width="99.8965%" height="15" fill="rgb(225,182,9)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="335.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run (9,652 samples, 99.90%)</title><rect x="0.1035%" y="309" width="99.8965%" height="15" fill="rgb(243,178,37)" fg:x="10" fg:w="9652"/><text x="0.1635%" y="319.50">winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>wayland_client::imp::event_queue::EventQueueInner::dispatch_pending (2 samples, 0.02%)</title><rect x="99.9793%" y="293" width="0.0207%" height="15" fill="rgb(232,139,19)" fg:x="9660" fg:w="2"/><text x="100.0393%" y="303.50"></text></g><g><title>wl_display_dispatch_queue_pending (1 samples, 0.01%)</title><rect x="99.9897%" y="277" width="0.0103%" height="15" fill="rgb(225,201,24)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="287.50"></text></g><g><title>wayland_client::imp::proxy::proxy_dispatcher (1 samples, 0.01%)</title><rect x="99.9897%" y="261" width="0.0103%" height="15" fill="rgb(221,47,46)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="271.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="99.9897%" y="245" width="0.0103%" height="15" fill="rgb(249,23,13)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="255.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="99.9897%" y="229" width="0.0103%" height="15" fill="rgb(219,9,5)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="239.50"></text></g><g><title>wayland_client::imp::proxy::ProxyInner::assign::{{closure}} (1 samples, 0.01%)</title><rect x="99.9897%" y="213" width="0.0103%" height="15" fill="rgb(254,171,16)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="223.50"></text></g><g><title>wayland_commons::filter::Filter&lt;E&gt;::send (1 samples, 0.01%)</title><rect x="99.9897%" y="197" width="0.0103%" height="15" fill="rgb(230,171,20)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="207.50"></text></g><g><title>wayland_client::proxy::Main&lt;I&gt;::quick_assign::{{closure}} (1 samples, 0.01%)</title><rect x="99.9897%" y="181" width="0.0103%" height="15" fill="rgb(210,71,41)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="191.50"></text></g><g><title>smithay_client_toolkit::seat::keyboard::KbdHandler::event (1 samples, 0.01%)</title><rect x="99.9897%" y="165" width="0.0103%" height="15" fill="rgb(206,173,20)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="175.50"></text></g><g><title>calloop::sources::timer::TimerHandle&lt;T&gt;::cancel_all_timeouts (1 samples, 0.01%)</title><rect x="99.9897%" y="149" width="0.0103%" height="15" fill="rgb(233,88,34)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="159.50"></text></g><g><title>calloop::sources::timer::TimerScheduler::deschedule (1 samples, 0.01%)</title><rect x="99.9897%" y="133" width="0.0103%" height="15" fill="rgb(223,209,46)" fg:x="9661" fg:w="1"/><text x="100.0497%" y="143.50"></text></g></svg></svg>